==3568== Memcheck, a memory error detector
==3568== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3568== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3568== Command: /home/wasmer/repositories/wasmer/wasmer/target/release/examples/exported-function
==3568== 
==3568== Conditional jump or move depends on uninitialised value(s)
==3568==    at 0x68B81D: wasmparser::validator::Validator::end (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/exported-function)
==3568==    by 0x68131C: wasmparser::validator::Validator::payload (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/exported-function)
==3568==    by 0x680591: wasmparser::validator::Validator::validate_all (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/exported-function)
==3568==    by 0x299B7C: wasmer_compiler::compiler::Compiler::validate_module (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/exported-function)
==3568==    by 0x265208: <wasmer_engine_jit::engine::JITEngine as wasmer_engine::engine::Engine>::validate (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/exported-function)
==3568==    by 0x57C194: wasmer::module::Module::from_binary (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/exported-function)
==3568==    by 0x2613A1: wasmer::module::Module::new (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/exported-function)
==3568==    by 0x25DBDF: exported_function::main (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/exported-function)
==3568==    by 0x25BE42: std::rt::lang_start::{{closure}} (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/exported-function)
==3568==    by 0x72D9D2: {{closure}} (rt.rs:52)
==3568==    by 0x72D9D2: do_call<closure-0,i32> (panicking.rs:348)
==3568==    by 0x72D9D2: try<i32,closure-0> (panicking.rs:325)
==3568==    by 0x72D9D2: catch_unwind<closure-0,i32> (panic.rs:394)
==3568==    by 0x72D9D2: std::rt::lang_start_internal (rt.rs:51)
==3568==    by 0x25EB31: main (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/exported-function)
==3568== 
==3568== 
==3568== HEAP SUMMARY:
==3568==     in use at exit: 30,336 bytes in 90 blocks
==3568==   total heap usage: 543 allocs, 453 frees, 105,554 bytes allocated
==3568== 
==3568== 1,152 bytes in 4 blocks are possibly lost in loss record 24 of 30
==3568==    at 0x4C33B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3568==    by 0x4013666: allocate_dtv (dl-tls.c:286)
==3568==    by 0x4013666: _dl_allocate_tls (dl-tls.c:530)
==3568==    by 0x5252227: allocate_stack (allocatestack.c:627)
==3568==    by 0x5252227: pthread_create@@GLIBC_2.2.5 (pthread_create.c:644)
==3568==    by 0x73C04C: std::sys::unix::thread::Thread::new (thread.rs:66)
==3568==    by 0x2DD366: std::thread::Builder::spawn (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/exported-function)
==3568==    by 0x2E06E6: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/exported-function)
==3568==    by 0x2E129F: rayon_core::registry::Registry::new (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/exported-function)
==3568==    by 0x2E4296: std::sync::once::Once::call_once::{{closure}} (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/exported-function)
==3568==    by 0x727079: std::sync::once::Once::call_inner (once.rs:416)
==3568==    by 0x2E0860: rayon_core::registry::global_registry (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/exported-function)
==3568==    by 0x2E365B: rayon_core::current_num_threads (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/exported-function)
==3568==    by 0x28C841: <rayon::iter::plumbing::bridge::Callback<C> as rayon::iter::plumbing::ProducerCallback<I>>::callback (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/exported-function)
==3568== 
==3568== LEAK SUMMARY:
==3568==    definitely lost: 0 bytes in 0 blocks
==3568==    indirectly lost: 0 bytes in 0 blocks
==3568==      possibly lost: 1,152 bytes in 4 blocks
==3568==    still reachable: 29,184 bytes in 86 blocks
==3568==         suppressed: 0 bytes in 0 blocks
==3568== Reachable blocks (those to which a pointer was found) are not shown.
==3568== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==3568== 
==3568== For counts of detected and suppressed errors, rerun with: -v
==3568== Use --track-origins=yes to see where uninitialised values come from
==3568== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
