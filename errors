==11393== Memcheck, a memory error detector
==11393== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11393== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==11393== Command: /home/wasmer/repositories/wasmer/wasmer/target/debug/examples/errors
==11393== 
==11393== valgrind: Unrecognised instruction at address 0x4040016.
==11393==    at 0x4040016: ???
==11393==    by 0x4040041: ???
==11393==    by 0x4040095: ???
==11393==    by 0x19FA733: wasmer_vm::trap::traphandlers::wasmer_call_trampoline::{{closure}} (traphandlers.rs:438)
==11393==    by 0x19FAB09: wasmer_vm::trap::traphandlers::catch_traps::call_closure (traphandlers.rs:470)
==11393==    by 0x1A19D70: RegisterSetjmp (helpers.c:15)
==11393==    by 0x19FAAF1: wasmer_vm::trap::traphandlers::catch_traps::{{closure}} (traphandlers.rs:459)
==11393==    by 0x19FAC7F: wasmer_vm::trap::traphandlers::CallThreadState::with::{{closure}}::{{closure}} (traphandlers.rs:535)
==11393==    by 0x19EF043: wasmer_vm::trap::traphandlers::tls::set::{{closure}} (traphandlers.rs:689)
==11393==    by 0x19BBA00: std::thread::local::LocalKey<T>::try_with (local.rs:263)
==11393==    by 0x19BB58D: std::thread::local::LocalKey<T>::with (local.rs:239)
==11393==    by 0x19EEEA8: wasmer_vm::trap::traphandlers::tls::set (traphandlers.rs:687)
==11393== Your program just tried to execute an instruction that Valgrind
==11393== did not recognise.  There are two possible reasons for this.
==11393== 1. Your program has a bug and erroneously jumped to a non-code
==11393==    location.  If you are running Memcheck and you just saw a
==11393==    warning about a bad jump, it's probably your program's fault.
==11393== 2. The instruction is legitimate but Valgrind doesn't handle it,
==11393==    i.e. it's Valgrind's fault.  If you think this is the case or
==11393==    you are not sure, please let us know and we'll try to fix it.
==11393== Either way, Valgrind will now raise a SIGILL signal which will
==11393== probably kill your program.
==11393== Warning: client switching stacks?  SP change: 0x4051d48 --> 0x1ffeffd540
==11393==          to suppress, use: --max-stackframe=137354721272 or greater
==11393== 
==11393== HEAP SUMMARY:
==11393==     in use at exit: 30,384 bytes in 91 blocks
==11393==   total heap usage: 742 allocs, 651 frees, 128,459 bytes allocated
==11393== 
==11393== 16 bytes in 1 blocks are still reachable in loss record 1 of 31
==11393==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0x1A427EB: alloc::alloc::alloc (alloc.rs:80)
==11393==    by 0x1A43BC3: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11393==    by 0x1A4274C: alloc::alloc::exchange_malloc (alloc.rs:277)
==11393==    by 0x1A9A28D: new<std::sync::mutex::Mutex<()>> (boxed.rs:177)
==11393==    by 0x1A9A28D: backtrace::lock::lock::{{closure}} (lib.rs:134)
==11393==    by 0x1A947EF: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11393==    by 0x1C17389: std::sync::once::Once::call_inner (once.rs:416)
==11393==    by 0x1A94768: std::sync::once::Once::call_once (once.rs:264)
==11393==    by 0x1A9A1C2: backtrace::lock::lock (lib.rs:133)
==11393==    by 0x1A35A7B: backtrace::backtrace::trace (mod.rs:52)
==11393==    by 0x1A71BFC: backtrace::capture::Backtrace::create (capture.rs:176)
==11393==    by 0x1A71B73: backtrace::capture::Backtrace::new_unresolved (capture.rs:170)
==11393== 
==11393== 32 bytes in 1 blocks are still reachable in loss record 2 of 31
==11393==    at 0x4C33B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0x4E3F7F4: _dlerror_run (dlerror.c:140)
==11393==    by 0x4E3F165: dlsym (dlsym.c:70)
==11393==    by 0x1C2C2B3: fetch (weak.rs:61)
==11393==    by 0x1C2C2B3: get<unsafe extern "C" fn(*const libc::unix::linux_like::linux::gnu::b64::x86_64::pthread_attr_t) -> usize> (weak.rs:46)
==11393==    by 0x1C2C2B3: min_stack_size (thread.rs:449)
==11393==    by 0x1C2C2B3: std::sys::unix::thread::Thread::new (thread.rs:49)
==11393==    by 0xD6520B: std::thread::Builder::spawn_unchecked (mod.rs:492)
==11393==    by 0xD6748B: std::thread::Builder::spawn (mod.rs:386)
==11393==    by 0xD35F78: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (registry.rs:100)
==11393==    by 0xD370BF: rayon_core::registry::Registry::new (registry.rs:256)
==11393==    by 0xD361ED: rayon_core::registry::global_registry::{{closure}} (registry.rs:168)
==11393==    by 0xD366A9: rayon_core::registry::set_global_registry::{{closure}} (registry.rs:195)
==11393==    by 0xD59D73: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11393==    by 0x1C17389: std::sync::once::Once::call_inner (once.rs:416)
==11393== 
==11393== 40 bytes in 1 blocks are still reachable in loss record 3 of 31
==11393==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0x1A427EB: alloc::alloc::alloc (alloc.rs:80)
==11393==    by 0x1A43BC3: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11393==    by 0x1A4274C: alloc::alloc::exchange_malloc (alloc.rs:277)
==11393==    by 0x1A73C3C: std::sync::mutex::Mutex<T>::new (mutex.rs:223)
==11393==    by 0x1A9A27E: backtrace::lock::lock::{{closure}} (lib.rs:134)
==11393==    by 0x1A947EF: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11393==    by 0x1C17389: std::sync::once::Once::call_inner (once.rs:416)
==11393==    by 0x1A94768: std::sync::once::Once::call_once (once.rs:264)
==11393==    by 0x1A9A1C2: backtrace::lock::lock (lib.rs:133)
==11393==    by 0x1A35A7B: backtrace::backtrace::trace (mod.rs:52)
==11393==    by 0x1A71BFC: backtrace::capture::Backtrace::create (capture.rs:176)
==11393== 
==11393== 64 bytes in 4 blocks are still reachable in loss record 4 of 31
==11393==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0xD5FCCB: alloc::alloc::alloc (alloc.rs:80)
==11393==    by 0xD60AF3: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11393==    by 0xD5FC2C: alloc::alloc::exchange_malloc (alloc.rs:277)
==11393==    by 0xD46176: new<crossbeam_deque::deque::Buffer<rayon_core::job::JobRef>> (boxed.rs:177)
==11393==    by 0xD46176: <T as crossbeam_epoch::atomic::Pointable>::init (atomic.rs:188)
==11393==    by 0xD61993: crossbeam_epoch::atomic::Owned<T>::init (atomic.rs:861)
==11393==    by 0xD61AE3: crossbeam_epoch::atomic::Atomic<T>::init (atomic.rs:309)
==11393==    by 0xD61AB3: crossbeam_epoch::atomic::Atomic<T>::new (atomic.rs:294)
==11393==    by 0xD44876: crossbeam_deque::deque::Worker<T>::new_lifo (deque.rs:253)
==11393==    by 0xD3753E: rayon_core::registry::Registry::new::{{closure}} (registry.rs:225)
==11393==    by 0xD7028C: core::iter::adapters::map_fold::{{closure}} (mod.rs:833)
==11393==    by 0xD3F60D: core::iter::traits::iterator::Iterator::fold (iterator.rs:2022)
==11393== 
==11393== 64 bytes in 4 blocks are still reachable in loss record 5 of 31
==11393==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0x1C2C20C: alloc (alloc.rs:80)
==11393==    by 0x1C2C20C: alloc (alloc.rs:174)
==11393==    by 0x1C2C20C: exchange_malloc (alloc.rs:277)
==11393==    by 0x1C2C20C: std::sys::unix::thread::Thread::new (thread.rs:44)
==11393==    by 0xD6520B: std::thread::Builder::spawn_unchecked (mod.rs:492)
==11393==    by 0xD6748B: std::thread::Builder::spawn (mod.rs:386)
==11393==    by 0xD35F78: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (registry.rs:100)
==11393==    by 0xD370BF: rayon_core::registry::Registry::new (registry.rs:256)
==11393==    by 0xD361ED: rayon_core::registry::global_registry::{{closure}} (registry.rs:168)
==11393==    by 0xD366A9: rayon_core::registry::set_global_registry::{{closure}} (registry.rs:195)
==11393==    by 0xD59D73: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11393==    by 0x1C17389: std::sync::once::Once::call_inner (once.rs:416)
==11393==    by 0xD59B10: std::sync::once::Once::call_once (once.rs:264)
==11393==    by 0xD364F6: rayon_core::registry::set_global_registry (registry.rs:194)
==11393== 
==11393== 72 bytes in 1 blocks are still reachable in loss record 6 of 31
==11393==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0x181E99B: alloc::alloc::alloc (alloc.rs:80)
==11393==    by 0x181EAC3: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11393==    by 0x181E8FC: alloc::alloc::exchange_malloc (alloc.rs:277)
==11393==    by 0x18217B7: std::sync::rwlock::RwLock<T>::new (rwlock.rs:134)
==11393==    by 0x1821AEC: <std::sync::rwlock::RwLock<T> as core::default::Default>::default (rwlock.rs:451)
==11393==    by 0x1813460: __static_ref_initialize (frame_info.rs:28)
==11393==    by 0x1813460: core::ops::function::FnOnce::call_once (function.rs:233)
==11393==    by 0x184B17B: lazy_static::lazy::Lazy<T>::get::{{closure}} (inline_lazy.rs:31)
==11393==    by 0x1849AF4: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11393==    by 0x1C17389: std::sync::once::Once::call_inner (once.rs:416)
==11393==    by 0x1849A70: std::sync::once::Once::call_once (once.rs:264)
==11393==    by 0x180E888: get<std::sync::rwlock::RwLock<wasmer_engine::trap::frame_info::GlobalFrameInfo>,fn() -> std::sync::rwlock::RwLock<wasmer_engine::trap::frame_info::GlobalFrameInfo>> (inline_lazy.rs:30)
==11393==    by 0x180E888: __stability (lib.rs:142)
==11393==    by 0x180E888: <wasmer_engine::trap::frame_info::FRAME_INFO as core::ops::deref::Deref>::deref (lib.rs:144)
==11393== 
==11393== 128 bytes in 4 blocks are still reachable in loss record 7 of 31
==11393==    at 0x4C33B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0x56C48E1: __cxa_thread_atexit_impl (cxa_thread_atexit_impl.c:106)
==11393==    by 0x1BF883E: register_dtor (fast_thread_local.rs:33)
==11393==    by 0x1BF883E: try_register_dtor<core::cell::RefCell<core::option::Option<std::sys_common::thread_info::ThreadInfo>>> (local.rs:438)
==11393==    by 0x1BF883E: std::thread::local::fast::Key<T>::try_initialize (local.rs:424)
==11393==    by 0x1C1B039: get<core::cell::RefCell<core::option::Option<std::sys_common::thread_info::ThreadInfo>>,fn() -> core::cell::RefCell<core::option::Option<std::sys_common::thread_info::ThreadInfo>>> (local.rs:410)
==11393==    by 0x1C1B039: __getit (local.rs:175)
==11393==    by 0x1C1B039: try_with<core::cell::RefCell<core::option::Option<std::sys_common::thread_info::ThreadInfo>>,closure-0,()> (local.rs:262)
==11393==    by 0x1C1B039: with<core::cell::RefCell<core::option::Option<std::sys_common::thread_info::ThreadInfo>>,closure-0,()> (local.rs:239)
==11393==    by 0x1C1B039: std::sys_common::thread_info::set (thread_info.rs:40)
==11393==    by 0xD666A1: std::thread::Builder::spawn_unchecked::{{closure}} (mod.rs:473)
==11393==    by 0xD5ACBE: core::ops::function::FnOnce::call_once{{vtable-shim}} (function.rs:233)
==11393==    by 0x1C2C629: call_once<(),FnOnce<()>> (boxed.rs:1081)
==11393==    by 0x1C2C629: call_once<(),alloc::boxed::Box<FnOnce<()>>> (boxed.rs:1081)
==11393==    by 0x1C2C629: std::sys::unix::thread::Thread::new::thread_start (thread.rs:87)
==11393==    by 0x52516DA: start_thread (pthread_create.c:463)
==11393==    by 0x57A271E: clone (clone.S:95)
==11393== 
==11393== 128 bytes in 4 blocks are still reachable in loss record 8 of 31
==11393==    at 0x4C33B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0x56C48E1: __cxa_thread_atexit_impl (cxa_thread_atexit_impl.c:106)
==11393==    by 0xD9E511: std::thread::local::fast::Key<T>::try_register_dtor (local.rs:438)
==11393==    by 0xD9E412: std::thread::local::fast::Key<T>::try_initialize (local.rs:424)
==11393==    by 0xD9E5B6: std::thread::local::fast::Key<T>::get (local.rs:410)
==11393==    by 0xD9E30C: crossbeam_epoch::default::HANDLE::__getit (local.rs:175)
==11393==    by 0xD49584: std::thread::local::LocalKey<T>::try_with (local.rs:262)
==11393==    by 0xD4DA12: crossbeam_epoch::default::with_handle (default.rs:43)
==11393==    by 0xD4DC76: crossbeam_epoch::default::is_pinned (default.rs:30)
==11393==    by 0xD44A3C: crossbeam_deque::deque::Stealer<T>::steal (deque.rs:619)
==11393==    by 0xD393A2: rayon_core::registry::WorkerThread::steal::{{closure}} (registry.rs:775)
==11393==    by 0xD3483C: core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (iterator.rs:2258)
==11393== 
==11393== 160 bytes in 4 blocks are still reachable in loss record 9 of 31
==11393==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0xD5FCCB: alloc::alloc::alloc (alloc.rs:80)
==11393==    by 0xD60AF3: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11393==    by 0xD5FC2C: alloc::alloc::exchange_malloc (alloc.rs:277)
==11393==    by 0xD649EF: std::sync::mutex::Mutex<T>::new (mutex.rs:223)
==11393==    by 0xD78100: rayon_core::latch::LockLatch::new (latch.rs:230)
==11393==    by 0xD382EC: rayon_core::registry::ThreadInfo::new (registry.rs:579)
==11393==    by 0xD5AAB1: core::ops::function::FnMut::call_mut (function.rs:154)
==11393==    by 0xD70A73: core::iter::adapters::map_fold::{{closure}} (mod.rs:833)
==11393==    by 0xD53A93: core::iter::traits::iterator::Iterator::fold (iterator.rs:2022)
==11393==    by 0xD71758: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (mod.rs:873)
==11393==    by 0xD6F919: core::iter::traits::iterator::Iterator::for_each (iterator.rs:658)
==11393== 
==11393== 160 bytes in 4 blocks are still reachable in loss record 10 of 31
==11393==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0xD5FCCB: alloc::alloc::alloc (alloc.rs:80)
==11393==    by 0xD60AF3: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11393==    by 0xD5FC2C: alloc::alloc::exchange_malloc (alloc.rs:277)
==11393==    by 0xD649EF: std::sync::mutex::Mutex<T>::new (mutex.rs:223)
==11393==    by 0xD78100: rayon_core::latch::LockLatch::new (latch.rs:230)
==11393==    by 0xD38304: rayon_core::registry::ThreadInfo::new (registry.rs:580)
==11393==    by 0xD5AAB1: core::ops::function::FnMut::call_mut (function.rs:154)
==11393==    by 0xD70A73: core::iter::adapters::map_fold::{{closure}} (mod.rs:833)
==11393==    by 0xD53A93: core::iter::traits::iterator::Iterator::fold (iterator.rs:2022)
==11393==    by 0xD71758: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (mod.rs:873)
==11393==    by 0xD6F919: core::iter::traits::iterator::Iterator::for_each (iterator.rs:658)
==11393== 
==11393== 160 bytes in 4 blocks are still reachable in loss record 11 of 31
==11393==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0xD5FCCB: alloc::alloc::alloc (alloc.rs:80)
==11393==    by 0xD60AF3: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11393==    by 0xD5FC2C: alloc::alloc::exchange_malloc (alloc.rs:277)
==11393==    by 0xD649EF: std::sync::mutex::Mutex<T>::new (mutex.rs:223)
==11393==    by 0xD682B3: <std::sync::mutex::Mutex<T> as core::default::Default>::default (mutex.rs:446)
==11393==    by 0xD52F5E: <rayon_core::sleep::WorkerSleepState as core::default::Default>::default (mod.rs:55)
==11393==    by 0xD5040D: <crossbeam_utils::cache_padded::CachePadded<T> as core::default::Default>::default (cache_padded.rs:77)
==11393==    by 0xD517FA: rayon_core::sleep::Sleep::new::{{closure}} (mod.rs:67)
==11393==    by 0xD70740: core::iter::adapters::map_fold::{{closure}} (mod.rs:833)
==11393==    by 0xD3F8E8: core::iter::traits::iterator::Iterator::fold (iterator.rs:2022)
==11393==    by 0xD71699: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (mod.rs:873)
==11393== 
==11393== 160 bytes in 4 blocks are still reachable in loss record 12 of 31
==11393==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0x1BF9BDE: alloc (alloc.rs:80)
==11393==    by 0x1BF9BDE: alloc (alloc.rs:174)
==11393==    by 0x1BF9BDE: exchange_malloc (alloc.rs:277)
==11393==    by 0x1BF9BDE: new<()> (mutex.rs:223)
==11393==    by 0x1BF9BDE: std::thread::Thread::new (mod.rs:1149)
==11393==    by 0xD64FAD: std::thread::Builder::spawn_unchecked (mod.rs:462)
==11393==    by 0xD6748B: std::thread::Builder::spawn (mod.rs:386)
==11393==    by 0xD35F78: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (registry.rs:100)
==11393==    by 0xD370BF: rayon_core::registry::Registry::new (registry.rs:256)
==11393==    by 0xD361ED: rayon_core::registry::global_registry::{{closure}} (registry.rs:168)
==11393==    by 0xD366A9: rayon_core::registry::set_global_registry::{{closure}} (registry.rs:195)
==11393==    by 0xD59D73: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11393==    by 0x1C17389: std::sync::once::Once::call_inner (once.rs:416)
==11393==    by 0xD59B10: std::sync::once::Once::call_once (once.rs:264)
==11393==    by 0xD364F6: rayon_core::registry::set_global_registry (registry.rs:194)
==11393== 
==11393== 160 bytes in 4 blocks are still reachable in loss record 13 of 31
==11393==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0xD5FCCB: alloc::alloc::alloc (alloc.rs:80)
==11393==    by 0xD60AF3: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11393==    by 0xD5FC2C: alloc::alloc::exchange_malloc (alloc.rs:277)
==11393==    by 0xD2F5F7: alloc::sync::Arc<T>::new (sync.rs:324)
==11393==    by 0xD6504B: std::thread::Builder::spawn_unchecked (mod.rs:465)
==11393==    by 0xD6748B: std::thread::Builder::spawn (mod.rs:386)
==11393==    by 0xD35F78: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (registry.rs:100)
==11393==    by 0xD370BF: rayon_core::registry::Registry::new (registry.rs:256)
==11393==    by 0xD361ED: rayon_core::registry::global_registry::{{closure}} (registry.rs:168)
==11393==    by 0xD366A9: rayon_core::registry::set_global_registry::{{closure}} (registry.rs:195)
==11393==    by 0xD59D73: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11393== 
==11393== 192 bytes in 4 blocks are still reachable in loss record 14 of 31
==11393==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0x1C16CD6: alloc (alloc.rs:80)
==11393==    by 0x1C16CD6: alloc (alloc.rs:174)
==11393==    by 0x1C16CD6: exchange_malloc (alloc.rs:277)
==11393==    by 0x1C16CD6: std::sync::condvar::Condvar::new (condvar.rs:130)
==11393==    by 0xD7811C: rayon_core::latch::LockLatch::new (latch.rs:231)
==11393==    by 0xD382EC: rayon_core::registry::ThreadInfo::new (registry.rs:579)
==11393==    by 0xD5AAB1: core::ops::function::FnMut::call_mut (function.rs:154)
==11393==    by 0xD70A73: core::iter::adapters::map_fold::{{closure}} (mod.rs:833)
==11393==    by 0xD53A93: core::iter::traits::iterator::Iterator::fold (iterator.rs:2022)
==11393==    by 0xD71758: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (mod.rs:873)
==11393==    by 0xD6F919: core::iter::traits::iterator::Iterator::for_each (iterator.rs:658)
==11393==    by 0xD57911: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::spec_extend (vec.rs:2140)
==11393==    by 0xD57FF4: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter (vec.rs:2120)
==11393==    by 0xD59126: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (vec.rs:1995)
==11393== 
==11393== 192 bytes in 4 blocks are still reachable in loss record 15 of 31
==11393==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0x1C16CD6: alloc (alloc.rs:80)
==11393==    by 0x1C16CD6: alloc (alloc.rs:174)
==11393==    by 0x1C16CD6: exchange_malloc (alloc.rs:277)
==11393==    by 0x1C16CD6: std::sync::condvar::Condvar::new (condvar.rs:130)
==11393==    by 0xD7811C: rayon_core::latch::LockLatch::new (latch.rs:231)
==11393==    by 0xD38304: rayon_core::registry::ThreadInfo::new (registry.rs:580)
==11393==    by 0xD5AAB1: core::ops::function::FnMut::call_mut (function.rs:154)
==11393==    by 0xD70A73: core::iter::adapters::map_fold::{{closure}} (mod.rs:833)
==11393==    by 0xD53A93: core::iter::traits::iterator::Iterator::fold (iterator.rs:2022)
==11393==    by 0xD71758: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (mod.rs:873)
==11393==    by 0xD6F919: core::iter::traits::iterator::Iterator::for_each (iterator.rs:658)
==11393==    by 0xD57911: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::spec_extend (vec.rs:2140)
==11393==    by 0xD57FF4: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter (vec.rs:2120)
==11393==    by 0xD59126: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (vec.rs:1995)
==11393== 
==11393== 192 bytes in 4 blocks are still reachable in loss record 16 of 31
==11393==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0x1C16CD6: alloc (alloc.rs:80)
==11393==    by 0x1C16CD6: alloc (alloc.rs:174)
==11393==    by 0x1C16CD6: exchange_malloc (alloc.rs:277)
==11393==    by 0x1C16CD6: std::sync::condvar::Condvar::new (condvar.rs:130)
==11393==    by 0xD52F7A: <rayon_core::sleep::WorkerSleepState as core::default::Default>::default (mod.rs:57)
==11393==    by 0xD5040D: <crossbeam_utils::cache_padded::CachePadded<T> as core::default::Default>::default (cache_padded.rs:77)
==11393==    by 0xD517FA: rayon_core::sleep::Sleep::new::{{closure}} (mod.rs:67)
==11393==    by 0xD70740: core::iter::adapters::map_fold::{{closure}} (mod.rs:833)
==11393==    by 0xD3F8E8: core::iter::traits::iterator::Iterator::fold (iterator.rs:2022)
==11393==    by 0xD71699: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (mod.rs:873)
==11393==    by 0xD6F7EA: core::iter::traits::iterator::Iterator::for_each (iterator.rs:658)
==11393==    by 0xD57517: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::spec_extend (vec.rs:2140)
==11393==    by 0xD58141: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter (vec.rs:2120)
==11393==    by 0xD59185: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (vec.rs:1995)
==11393== 
==11393== 192 bytes in 4 blocks are still reachable in loss record 17 of 31
==11393==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0x1BF9C42: alloc (alloc.rs:80)
==11393==    by 0x1BF9C42: alloc (alloc.rs:174)
==11393==    by 0x1BF9C42: exchange_malloc (alloc.rs:277)
==11393==    by 0x1BF9C42: new (condvar.rs:130)
==11393==    by 0x1BF9C42: std::thread::Thread::new (mod.rs:1150)
==11393==    by 0xD64FAD: std::thread::Builder::spawn_unchecked (mod.rs:462)
==11393==    by 0xD6748B: std::thread::Builder::spawn (mod.rs:386)
==11393==    by 0xD35F78: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (registry.rs:100)
==11393==    by 0xD370BF: rayon_core::registry::Registry::new (registry.rs:256)
==11393==    by 0xD361ED: rayon_core::registry::global_registry::{{closure}} (registry.rs:168)
==11393==    by 0xD366A9: rayon_core::registry::set_global_registry::{{closure}} (registry.rs:195)
==11393==    by 0xD59D73: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11393==    by 0x1C17389: std::sync::once::Once::call_inner (once.rs:416)
==11393==    by 0xD59B10: std::sync::once::Once::call_once (once.rs:264)
==11393==    by 0xD364F6: rayon_core::registry::set_global_registry (registry.rs:194)
==11393== 
==11393== 320 bytes in 4 blocks are still reachable in loss record 18 of 31
==11393==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0x1BF9C91: alloc (alloc.rs:80)
==11393==    by 0x1BF9C91: alloc (alloc.rs:174)
==11393==    by 0x1BF9C91: exchange_malloc (alloc.rs:277)
==11393==    by 0x1BF9C91: new<std::thread::Inner> (sync.rs:324)
==11393==    by 0x1BF9C91: std::thread::Thread::new (mod.rs:1145)
==11393==    by 0xD64FAD: std::thread::Builder::spawn_unchecked (mod.rs:462)
==11393==    by 0xD6748B: std::thread::Builder::spawn (mod.rs:386)
==11393==    by 0xD35F78: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (registry.rs:100)
==11393==    by 0xD370BF: rayon_core::registry::Registry::new (registry.rs:256)
==11393==    by 0xD361ED: rayon_core::registry::global_registry::{{closure}} (registry.rs:168)
==11393==    by 0xD366A9: rayon_core::registry::set_global_registry::{{closure}} (registry.rs:195)
==11393==    by 0xD59D73: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11393==    by 0x1C17389: std::sync::once::Once::call_inner (once.rs:416)
==11393==    by 0xD59B10: std::sync::once::Once::call_once (once.rs:264)
==11393==    by 0xD364F6: rayon_core::registry::set_global_registry (registry.rs:194)
==11393== 
==11393== 384 bytes in 1 blocks are still reachable in loss record 19 of 31
==11393==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0xDC6E7B: alloc::alloc::alloc (alloc.rs:80)
==11393==    by 0xDC7723: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11393==    by 0xDBE23A: alloc::raw_vec::finish_grow (raw_vec.rs:497)
==11393==    by 0xD7B580: alloc::raw_vec::RawVec<T,A>::grow_amortized (raw_vec.rs:429)
==11393==    by 0xD79793: alloc::raw_vec::RawVec<T,A>::try_reserve (raw_vec.rs:310)
==11393==    by 0xD7D052: alloc::raw_vec::RawVec<T,A>::reserve (raw_vec.rs:300)
==11393==    by 0xD56338: alloc::vec::Vec<T>::reserve (vec.rs:505)
==11393==    by 0xD57827: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::spec_extend (vec.rs:2136)
==11393==    by 0xD57FF4: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter (vec.rs:2120)
==11393==    by 0xD59126: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (vec.rs:1995)
==11393==    by 0xD6F5A8: core::iter::traits::iterator::Iterator::collect (iterator.rs:1671)
==11393== 
==11393== 416 bytes in 4 blocks are still reachable in loss record 20 of 31
==11393==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0xD5FCCB: alloc::alloc::alloc (alloc.rs:80)
==11393==    by 0xD60AF3: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11393==    by 0xD5FC2C: alloc::alloc::exchange_malloc (alloc.rs:277)
==11393==    by 0xD65177: new<closure-0> (boxed.rs:177)
==11393==    by 0xD65177: std::thread::Builder::spawn_unchecked (mod.rs:494)
==11393==    by 0xD6748B: std::thread::Builder::spawn (mod.rs:386)
==11393==    by 0xD35F78: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (registry.rs:100)
==11393==    by 0xD370BF: rayon_core::registry::Registry::new (registry.rs:256)
==11393==    by 0xD361ED: rayon_core::registry::global_registry::{{closure}} (registry.rs:168)
==11393==    by 0xD366A9: rayon_core::registry::set_global_registry::{{closure}} (registry.rs:195)
==11393==    by 0xD59D73: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11393==    by 0x1C17389: std::sync::once::Once::call_inner (once.rs:416)
==11393== 
==11393== 512 bytes in 1 blocks are still reachable in loss record 21 of 31
==11393==    at 0x4C33E76: memalign (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0x4C33F91: posix_memalign (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0x1C1C749: aligned_malloc (alloc.rs:95)
==11393==    by 0x1C1C749: alloc (alloc.rs:22)
==11393==    by 0x1C1C749: __rdl_alloc (alloc.rs:304)
==11393==    by 0xDC6E7B: alloc::alloc::alloc (alloc.rs:80)
==11393==    by 0xDC7723: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11393==    by 0xDBE23A: alloc::raw_vec::finish_grow (raw_vec.rs:497)
==11393==    by 0xD7B220: alloc::raw_vec::RawVec<T,A>::grow_amortized (raw_vec.rs:429)
==11393==    by 0xD79693: alloc::raw_vec::RawVec<T,A>::try_reserve (raw_vec.rs:310)
==11393==    by 0xD7D192: alloc::raw_vec::RawVec<T,A>::reserve (raw_vec.rs:300)
==11393==    by 0xD56308: alloc::vec::Vec<T>::reserve (vec.rs:505)
==11393==    by 0xD57457: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::spec_extend (vec.rs:2136)
==11393==    by 0xD58141: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter (vec.rs:2120)
==11393== 
==11393== 640 bytes in 1 blocks are still reachable in loss record 22 of 31
==11393==    at 0x4C33E76: memalign (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0x4C33F91: posix_memalign (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0x1C1C749: aligned_malloc (alloc.rs:95)
==11393==    by 0x1C1C749: alloc (alloc.rs:22)
==11393==    by 0x1C1C749: __rdl_alloc (alloc.rs:304)
==11393==    by 0xD5FCCB: alloc::alloc::alloc (alloc.rs:80)
==11393==    by 0xD60AF3: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11393==    by 0xD5FC2C: alloc::alloc::exchange_malloc (alloc.rs:277)
==11393==    by 0xD2F425: alloc::sync::Arc<T>::new (sync.rs:324)
==11393==    by 0xD36CB7: rayon_core::registry::Registry::new (registry.rs:234)
==11393==    by 0xD361ED: rayon_core::registry::global_registry::{{closure}} (registry.rs:168)
==11393==    by 0xD366A9: rayon_core::registry::set_global_registry::{{closure}} (registry.rs:195)
==11393==    by 0xD59D73: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11393==    by 0x1C17389: std::sync::once::Once::call_inner (once.rs:416)
==11393== 
==11393== 640 bytes in 1 blocks are still reachable in loss record 23 of 31
==11393==    at 0x4C33E76: memalign (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0x4C33F91: posix_memalign (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0x1C1C749: aligned_malloc (alloc.rs:95)
==11393==    by 0x1C1C749: alloc (alloc.rs:22)
==11393==    by 0x1C1C749: __rdl_alloc (alloc.rs:304)
==11393==    by 0xDA2D7B: alloc::alloc::alloc (alloc.rs:80)
==11393==    by 0xDA32C3: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11393==    by 0xDA2CDC: alloc::alloc::exchange_malloc (alloc.rs:277)
==11393==    by 0xD9EF55: alloc::sync::Arc<T>::new (sync.rs:324)
==11393==    by 0xD9F499: <crossbeam_epoch::collector::Collector as core::default::Default>::default (collector.rs:32)
==11393==    by 0xD9F4C6: crossbeam_epoch::collector::Collector::new (collector.rs:40)
==11393==    by 0xD9D9B9: __static_ref_initialize (default.rs:13)
==11393==    by 0xD9D9B9: core::ops::function::FnOnce::call_once (function.rs:233)
==11393==    by 0xD9D825: lazy_static::lazy::Lazy<T>::get::{{closure}} (inline_lazy.rs:31)
==11393==    by 0xD9EAE4: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11393== 
==11393== 808 bytes in 1 blocks are still reachable in loss record 24 of 31
==11393==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0x181E99B: alloc::alloc::alloc (alloc.rs:80)
==11393==    by 0x181EAC3: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11393==    by 0x181E8FC: alloc::alloc::exchange_malloc (alloc.rs:277)
==11393==    by 0x182CB70: new<alloc::collections::btree::node::LeafNode<usize, wasmer_engine::trap::frame_info::ModuleInfoFrameInfo>> (boxed.rs:177)
==11393==    by 0x182CB70: alloc::collections::btree::node::Root<K,V>::new_leaf (node.rs:157)
==11393==    by 0x1813479: core::ops::function::FnOnce::call_once (function.rs:233)
==11393==    by 0x181FBBC: core::option::Option<T>::get_or_insert_with (option.rs:853)
==11393==    by 0x184547E: alloc::collections::btree::map::BTreeMap<K,V>::ensure_root_is_owned (map.rs:2324)
==11393==    by 0x1845851: alloc::collections::btree::map::BTreeMap<K,V>::entry (map.rs:1061)
==11393==    by 0x18466C9: alloc::collections::btree::map::BTreeMap<K,V>::insert (map.rs:829)
==11393==    by 0x180E59F: wasmer_engine::trap::frame_info::register (frame_info.rs:281)
==11393==    by 0xBD7664: <wasmer_engine_jit::artifact::JITArtifact as wasmer_engine::artifact::Artifact>::register_frame_info (artifact.rs:275)
==11393== 
==11393== 1,152 bytes in 4 blocks are possibly lost in loss record 25 of 31
==11393==    at 0x4C33B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0x4013666: allocate_dtv (dl-tls.c:286)
==11393==    by 0x4013666: _dl_allocate_tls (dl-tls.c:530)
==11393==    by 0x5252227: allocate_stack (allocatestack.c:627)
==11393==    by 0x5252227: pthread_create@@GLIBC_2.2.5 (pthread_create.c:644)
==11393==    by 0x1C2C35C: std::sys::unix::thread::Thread::new (thread.rs:66)
==11393==    by 0xD6520B: std::thread::Builder::spawn_unchecked (mod.rs:492)
==11393==    by 0xD6748B: std::thread::Builder::spawn (mod.rs:386)
==11393==    by 0xD35F78: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (registry.rs:100)
==11393==    by 0xD370BF: rayon_core::registry::Registry::new (registry.rs:256)
==11393==    by 0xD361ED: rayon_core::registry::global_registry::{{closure}} (registry.rs:168)
==11393==    by 0xD366A9: rayon_core::registry::set_global_registry::{{closure}} (registry.rs:195)
==11393==    by 0xD59D73: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11393==    by 0x1C17389: std::sync::once::Once::call_inner (once.rs:416)
==11393== 
==11393== 1,520 bytes in 1 blocks are still reachable in loss record 26 of 31
==11393==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0xD5FCCB: alloc::alloc::alloc (alloc.rs:80)
==11393==    by 0xD60AF3: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11393==    by 0xD5FC2C: alloc::alloc::exchange_malloc (alloc.rs:277)
==11393==    by 0xD46551: new<crossbeam_deque::deque::Block<rayon_core::job::JobRef>> (boxed.rs:177)
==11393==    by 0xD46551: <crossbeam_deque::deque::Injector<T> as core::default::Default>::default (deque.rs:1187)
==11393==    by 0xD44DDD: crossbeam_deque::deque::Injector<T>::new (deque.rs:1213)
==11393==    by 0xD36A83: rayon_core::registry::Registry::new (registry.rs:238)
==11393==    by 0xD361ED: rayon_core::registry::global_registry::{{closure}} (registry.rs:168)
==11393==    by 0xD366A9: rayon_core::registry::set_global_registry::{{closure}} (registry.rs:195)
==11393==    by 0xD59D73: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11393==    by 0x1C17389: std::sync::once::Once::call_inner (once.rs:416)
==11393==    by 0xD59B10: std::sync::once::Once::call_once (once.rs:264)
==11393== 
==11393== 1,536 bytes in 4 blocks are still reachable in loss record 27 of 31
==11393==    at 0x4C33E76: memalign (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0x4C33F91: posix_memalign (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0x1C1C749: aligned_malloc (alloc.rs:95)
==11393==    by 0x1C1C749: alloc (alloc.rs:22)
==11393==    by 0x1C1C749: __rdl_alloc (alloc.rs:304)
==11393==    by 0xD5FCCB: alloc::alloc::alloc (alloc.rs:80)
==11393==    by 0xD60AF3: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11393==    by 0xD5FC2C: alloc::alloc::exchange_malloc (alloc.rs:277)
==11393==    by 0xD2F785: alloc::sync::Arc<T>::new (sync.rs:324)
==11393==    by 0xD4490D: crossbeam_deque::deque::Worker<T>::new_lifo (deque.rs:250)
==11393==    by 0xD3753E: rayon_core::registry::Registry::new::{{closure}} (registry.rs:225)
==11393==    by 0xD7028C: core::iter::adapters::map_fold::{{closure}} (mod.rs:833)
==11393==    by 0xD3F60D: core::iter::traits::iterator::Iterator::fold (iterator.rs:2022)
==11393==    by 0xD71843: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (mod.rs:873)
==11393== 
==11393== 2,008 bytes in 1 blocks are still reachable in loss record 28 of 31
==11393==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0xDA2D7B: alloc::alloc::alloc (alloc.rs:80)
==11393==    by 0xDA32C3: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11393==    by 0xDA2CDC: alloc::alloc::exchange_malloc (alloc.rs:277)
==11393==    by 0xD9B699: new<crossbeam_epoch::sync::queue::Node<crossbeam_epoch::internal::SealedBag>> (boxed.rs:177)
==11393==    by 0xD9B699: <T as crossbeam_epoch::atomic::Pointable>::init (atomic.rs:188)
==11393==    by 0xD9B045: crossbeam_epoch::atomic::Owned<T>::init (atomic.rs:861)
==11393==    by 0xD9AF95: crossbeam_epoch::atomic::Owned<T>::new (atomic.rs:846)
==11393==    by 0xD9B89B: crossbeam_epoch::sync::queue::Queue<T>::new (queue.rs:50)
==11393==    by 0xD96C93: crossbeam_epoch::internal::Global::new (internal.rs:254)
==11393==    by 0xD9F48B: <crossbeam_epoch::collector::Collector as core::default::Default>::default (collector.rs:32)
==11393==    by 0xD9F4C6: crossbeam_epoch::collector::Collector::new (collector.rs:40)
==11393==    by 0xD9D9B9: __static_ref_initialize (default.rs:13)
==11393==    by 0xD9D9B9: core::ops::function::FnOnce::call_once (function.rs:233)
==11393== 
==11393== 4,096 bytes in 4 blocks are still reachable in loss record 29 of 31
==11393==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0xD5FCCB: alloc::alloc::alloc (alloc.rs:80)
==11393==    by 0xD60AF3: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11393==    by 0xD791DD: alloc::raw_vec::RawVec<T,A>::allocate_in (raw_vec.rs:183)
==11393==    by 0xD7C740: alloc::raw_vec::RawVec<T,A>::with_capacity_in (raw_vec.rs:159)
==11393==    by 0xD788BE: alloc::raw_vec::RawVec<T>::with_capacity (raw_vec.rs:90)
==11393==    by 0xD540DE: alloc::vec::Vec<T>::with_capacity (vec.rs:363)
==11393==    by 0xD43320: crossbeam_deque::deque::Buffer<T>::alloc (deque.rs:45)
==11393==    by 0xD447F9: crossbeam_deque::deque::Worker<T>::new_lifo (deque.rs:248)
==11393==    by 0xD3753E: rayon_core::registry::Registry::new::{{closure}} (registry.rs:225)
==11393==    by 0xD7028C: core::iter::adapters::map_fold::{{closure}} (mod.rs:833)
==11393==    by 0xD3F60D: core::iter::traits::iterator::Iterator::fold (iterator.rs:2022)
==11393== 
==11393== 6,080 bytes in 4 blocks are still reachable in loss record 30 of 31
==11393==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0xD5FCCB: alloc::alloc::alloc (alloc.rs:80)
==11393==    by 0xD60AF3: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11393==    by 0xD5FC2C: alloc::alloc::exchange_malloc (alloc.rs:277)
==11393==    by 0xD46551: new<crossbeam_deque::deque::Block<rayon_core::job::JobRef>> (boxed.rs:177)
==11393==    by 0xD46551: <crossbeam_deque::deque::Injector<T> as core::default::Default>::default (deque.rs:1187)
==11393==    by 0xD44DDD: crossbeam_deque::deque::Injector<T>::new (deque.rs:1213)
==11393==    by 0xD311BC: rayon_core::job::JobFifo::new (job.rs:193)
==11393==    by 0xD394DA: rayon_core::registry::main_loop (registry.rs:802)
==11393==    by 0xD35AAF: rayon_core::registry::ThreadBuilder::run (registry.rs:55)
==11393==    by 0xD36160: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn::{{closure}} (registry.rs:100)
==11393==    by 0xD6EB8F: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:130)
==11393==    by 0xD67390: std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (mod.rs:475)
==11393== 
==11393== 8,160 bytes in 4 blocks are still reachable in loss record 31 of 31
==11393==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11393==    by 0xDA2D7B: alloc::alloc::alloc (alloc.rs:80)
==11393==    by 0xDA32C3: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11393==    by 0xDA2CDC: alloc::alloc::exchange_malloc (alloc.rs:277)
==11393==    by 0xD966C9: new<crossbeam_epoch::internal::Local> (boxed.rs:177)
==11393==    by 0xD966C9: <T as crossbeam_epoch::atomic::Pointable>::init (atomic.rs:188)
==11393==    by 0xD9AFE5: crossbeam_epoch::atomic::Owned<T>::init (atomic.rs:861)
==11393==    by 0xD9AF45: crossbeam_epoch::atomic::Owned<T>::new (atomic.rs:846)
==11393==    by 0xD97532: crossbeam_epoch::internal::Local::register (internal.rs:392)
==11393==    by 0xD9F4ED: crossbeam_epoch::collector::Collector::register (collector.rs:45)
==11393==    by 0xD9E2D3: crossbeam_epoch::default::HANDLE::__init (default.rs:18)
==11393==    by 0xD9D998: core::ops::function::FnOnce::call_once (function.rs:233)
==11393==    by 0xDA346B: std::thread::local::lazy::LazyKeyInner<T>::initialize (local.rs:289)
==11393== 
==11393== LEAK SUMMARY:
==11393==    definitely lost: 0 bytes in 0 blocks
==11393==    indirectly lost: 0 bytes in 0 blocks
==11393==      possibly lost: 1,152 bytes in 4 blocks
==11393==    still reachable: 29,232 bytes in 87 blocks
==11393==         suppressed: 0 bytes in 0 blocks
==11393== 
==11393== For counts of detected and suppressed errors, rerun with: -v
==11393== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
