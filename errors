==3560== Memcheck, a memory error detector
==3560== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3560== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3560== Command: /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors
==3560== 
==3560== Conditional jump or move depends on uninitialised value(s)
==3560==    at 0x68993D: wasmparser::validator::Validator::end (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors)
==3560==    by 0x67F43C: wasmparser::validator::Validator::payload (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors)
==3560==    by 0x67E6B1: wasmparser::validator::Validator::validate_all (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors)
==3560==    by 0x297C9C: wasmer_compiler::compiler::Compiler::validate_module (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors)
==3560==    by 0x263328: <wasmer_engine_jit::engine::JITEngine as wasmer_engine::engine::Engine>::validate (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors)
==3560==    by 0x57A2B4: wasmer::module::Module::from_binary (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors)
==3560==    by 0x25C151: wasmer::module::Module::new (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors)
==3560==    by 0x25D30D: errors::main (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors)
==3560==    by 0x25BCF2: std::rt::lang_start::{{closure}} (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors)
==3560==    by 0x72BAF2: {{closure}} (rt.rs:52)
==3560==    by 0x72BAF2: do_call<closure-0,i32> (panicking.rs:348)
==3560==    by 0x72BAF2: try<i32,closure-0> (panicking.rs:325)
==3560==    by 0x72BAF2: catch_unwind<closure-0,i32> (panic.rs:394)
==3560==    by 0x72BAF2: std::rt::lang_start_internal (rt.rs:51)
==3560==    by 0x25DC91: main (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors)
==3560== 
==3560== valgrind: Unrecognised instruction at address 0x4040016.
==3560==    at 0x4040016: ???
==3560==    by 0x4040041: ???
==3560==    by 0x4040095: ???
==3560==    by 0x6B6D50: RegisterSetjmp (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors)
==3560==    by 0x6ABF67: std::thread::local::LocalKey<T>::with (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors)
==3560==    by 0x6B3464: wasmer_vm::trap::traphandlers::wasmer_call_trampoline (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors)
==3560==    by 0x25DE82: wasmer::native::NativeFunc<(),Rets>::call (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors)
==3560==    by 0x25D786: errors::main (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors)
==3560==    by 0x25BCF2: std::rt::lang_start::{{closure}} (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors)
==3560==    by 0x72BAF2: {{closure}} (rt.rs:52)
==3560==    by 0x72BAF2: do_call<closure-0,i32> (panicking.rs:348)
==3560==    by 0x72BAF2: try<i32,closure-0> (panicking.rs:325)
==3560==    by 0x72BAF2: catch_unwind<closure-0,i32> (panic.rs:394)
==3560==    by 0x72BAF2: std::rt::lang_start_internal (rt.rs:51)
==3560==    by 0x25DC91: main (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors)
==3560== Your program just tried to execute an instruction that Valgrind
==3560== did not recognise.  There are two possible reasons for this.
==3560== 1. Your program has a bug and erroneously jumped to a non-code
==3560==    location.  If you are running Memcheck and you just saw a
==3560==    warning about a bad jump, it's probably your program's fault.
==3560== 2. The instruction is legitimate but Valgrind doesn't handle it,
==3560==    i.e. it's Valgrind's fault.  If you think this is the case or
==3560==    you are not sure, please let us know and we'll try to fix it.
==3560== Either way, Valgrind will now raise a SIGILL signal which will
==3560== probably kill your program.
==3560== Warning: client switching stacks?  SP change: 0x4051f68 --> 0x1ffefff400
==3560==          to suppress, use: --max-stackframe=137354728600 or greater
==3560== 
==3560== HEAP SUMMARY:
==3560==     in use at exit: 30,392 bytes in 92 blocks
==3560==   total heap usage: 740 allocs, 648 frees, 127,265 bytes allocated
==3560== 
==3560== 1,152 bytes in 4 blocks are possibly lost in loss record 27 of 34
==3560==    at 0x4C33B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3560==    by 0x4013666: allocate_dtv (dl-tls.c:286)
==3560==    by 0x4013666: _dl_allocate_tls (dl-tls.c:530)
==3560==    by 0x5252227: allocate_stack (allocatestack.c:627)
==3560==    by 0x5252227: pthread_create@@GLIBC_2.2.5 (pthread_create.c:644)
==3560==    by 0x73A16C: std::sys::unix::thread::Thread::new (thread.rs:66)
==3560==    by 0x2DB486: std::thread::Builder::spawn (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors)
==3560==    by 0x2DE806: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors)
==3560==    by 0x2DF3BF: rayon_core::registry::Registry::new (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors)
==3560==    by 0x2E23B6: std::sync::once::Once::call_once::{{closure}} (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors)
==3560==    by 0x725199: std::sync::once::Once::call_inner (once.rs:416)
==3560==    by 0x2DE980: rayon_core::registry::global_registry (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors)
==3560==    by 0x2E177B: rayon_core::current_num_threads (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors)
==3560==    by 0x28A961: <rayon::iter::plumbing::bridge::Callback<C> as rayon::iter::plumbing::ProducerCallback<I>>::callback (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/errors)
==3560== 
==3560== LEAK SUMMARY:
==3560==    definitely lost: 0 bytes in 0 blocks
==3560==    indirectly lost: 0 bytes in 0 blocks
==3560==      possibly lost: 1,152 bytes in 4 blocks
==3560==    still reachable: 29,240 bytes in 88 blocks
==3560==         suppressed: 0 bytes in 0 blocks
==3560== Reachable blocks (those to which a pointer was found) are not shown.
==3560== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==3560== 
==3560== For counts of detected and suppressed errors, rerun with: -v
==3560== Use --track-origins=yes to see where uninitialised values come from
==3560== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
