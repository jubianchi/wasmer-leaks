==4325== Memcheck, a memory error detector
==4325== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==4325== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==4325== Command: /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844
==4325== 
--4325-- WARNING: unhandled amd64-linux syscall: 332
--4325-- You may be able to write your own handler.
--4325-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--4325-- Nevertheless we consider this a bug.  Please report
--4325-- it at http://valgrind.org/support/bug_reports.html.
==4325== Thread 2 test_exported_fu:
==4325== Conditional jump or move depends on uninitialised value(s)
==4325==    at 0x6EE06D: wasmparser::validator::Validator::end (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x6E3B6C: wasmparser::validator::Validator::payload (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x6E2DE1: wasmparser::validator::Validator::validate_all (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x2F086C: wasmer_compiler::compiler::Compiler::validate_module (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x2BBF98: <wasmer_engine_jit::engine::JITEngine as wasmer_engine::engine::Engine>::validate (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x5DD874: wasmer::module::Module::from_binary (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x26D1F1: wasmer::module::Module::new (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x26E8C0: core::ops::function::FnOnce::call_once (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x29C26B: call_once<(),FnOnce<()>> (boxed.rs:1081)
==4325==    by 0x29C26B: call_once<(),alloc::boxed::Box<FnOnce<()>>> (panic.rs:318)
==4325==    by 0x29C26B: do_call<std::panic::AssertUnwindSafe<alloc::boxed::Box<FnOnce<()>>>,()> (panicking.rs:348)
==4325==    by 0x29C26B: try<(),std::panic::AssertUnwindSafe<alloc::boxed::Box<FnOnce<()>>>> (panicking.rs:325)
==4325==    by 0x29C26B: catch_unwind<std::panic::AssertUnwindSafe<alloc::boxed::Box<FnOnce<()>>>,()> (panic.rs:394)
==4325==    by 0x29C26B: run_test_in_process (lib.rs:541)
==4325==    by 0x29C26B: test::run_test::run_test_inner::{{closure}} (lib.rs:450)
==4325==    by 0x271305: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:130)
==4325==    by 0x2770D4: {{closure}}<closure-0,()> (mod.rs:475)
==4325==    by 0x2770D4: call_once<(),closure-0> (panic.rs:318)
==4325==    by 0x2770D4: do_call<std::panic::AssertUnwindSafe<closure-0>,()> (panicking.rs:348)
==4325==    by 0x2770D4: try<(),std::panic::AssertUnwindSafe<closure-0>> (panicking.rs:325)
==4325==    by 0x2770D4: catch_unwind<std::panic::AssertUnwindSafe<closure-0>,()> (panic.rs:394)
==4325==    by 0x2770D4: {{closure}}<closure-0,()> (mod.rs:474)
==4325==    by 0x2770D4: core::ops::function::FnOnce::call_once{{vtable-shim}} (function.rs:233)
==4325==    by 0x79EE99: call_once<(),FnOnce<()>> (boxed.rs:1081)
==4325==    by 0x79EE99: call_once<(),alloc::boxed::Box<FnOnce<()>>> (boxed.rs:1081)
==4325==    by 0x79EE99: std::sys::unix::thread::Thread::new::thread_start (thread.rs:87)
==4325== 
==4325== Conditional jump or move depends on uninitialised value(s)
==4325==    at 0x3DD5A8: cranelift_codegen::isa::unwind::systemv::UnwindInfo::build (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x496582: cranelift_codegen::isa::x86::unwind::systemv::create_unwind_info (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x35F762: cranelift_codegen::isa::x86::abi::create_unwind_info (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x390ED8: <cranelift_codegen::isa::x86::Isa as cranelift_codegen::isa::TargetIsa>::create_unwind_info (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x39530C: cranelift_codegen::context::Context::create_unwind_info (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x2FA95B: wasmer_compiler_cranelift::translator::unwind::compiled_function_unwind_info (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x2F2222: core::ops::function::impls::<impl core::ops::function::Fn<A> for &F>::call (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x30002E: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x3094A8: <rayon::iter::fold::FoldFolder<C,ID,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x2E6FEA: <rayon::iter::while_some::WhileSomeFolder<C> as rayon::iter::plumbing::Folder<core::option::Option<T>>>::consume_iter (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x2E5646: rayon::iter::plumbing::bridge_producer_consumer::helper (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x2E362C: <rayon::iter::plumbing::bridge::Callback<C> as rayon::iter::plumbing::ProducerCallback<I>>::callback (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325== 
==4325== 
==4325== HEAP SUMMARY:
==4325==     in use at exit: 30,336 bytes in 90 blocks
==4325==   total heap usage: 1,167 allocs, 1,077 frees, 170,351 bytes allocated
==4325== 
==4325== Thread 1:
==4325== 1,152 bytes in 4 blocks are possibly lost in loss record 24 of 30
==4325==    at 0x4C33B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4325==    by 0x4013666: allocate_dtv (dl-tls.c:286)
==4325==    by 0x4013666: _dl_allocate_tls (dl-tls.c:530)
==4325==    by 0x5252227: allocate_stack (allocatestack.c:627)
==4325==    by 0x5252227: pthread_create@@GLIBC_2.2.5 (pthread_create.c:644)
==4325==    by 0x79EBCC: std::sys::unix::thread::Thread::new (thread.rs:66)
==4325==    by 0x334166: std::thread::Builder::spawn (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x3374E6: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x33809F: rayon_core::registry::Registry::new (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x33B096: std::sync::once::Once::call_once::{{closure}} (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x789BF9: std::sync::once::Once::call_inner (once.rs:416)
==4325==    by 0x337660: rayon_core::registry::global_registry (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x33A45B: rayon_core::current_num_threads (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325==    by 0x2E35D1: <rayon::iter::plumbing::bridge::Callback<C> as rayon::iter::plumbing::ProducerCallback<I>>::callback (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/instance-6056bf7ef287e844)
==4325== 
==4325== LEAK SUMMARY:
==4325==    definitely lost: 0 bytes in 0 blocks
==4325==    indirectly lost: 0 bytes in 0 blocks
==4325==      possibly lost: 1,152 bytes in 4 blocks
==4325==    still reachable: 29,184 bytes in 86 blocks
==4325==         suppressed: 0 bytes in 0 blocks
==4325== Reachable blocks (those to which a pointer was found) are not shown.
==4325== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==4325== 
==4325== For counts of detected and suppressed errors, rerun with: -v
==4325== Use --track-origins=yes to see where uninitialised values come from
==4325== ERROR SUMMARY: 4 errors from 3 contexts (suppressed: 0 from 0)
