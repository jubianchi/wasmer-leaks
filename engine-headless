==13250== Memcheck, a memory error detector
==13250== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13250== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==13250== Command: /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless
==13250== 
--13250-- WARNING: unhandled amd64-linux syscall: 332
--13250-- You may be able to write your own handler.
--13250-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--13250-- Nevertheless we consider this a bug.  Please report
--13250-- it at http://valgrind.org/support/bug_reports.html.
==13250== Conditional jump or move depends on uninitialised value(s)
==13250==    at 0x6AD1BD: wasmparser::validator::Validator::end (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless)
==13250==    by 0x6A2CBC: wasmparser::validator::Validator::payload (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless)
==13250==    by 0x6A1F31: wasmparser::validator::Validator::validate_all (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless)
==13250==    by 0x2BB4FC: wasmer_compiler::compiler::Compiler::validate_module (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless)
==13250==    by 0x26E948: <wasmer_engine_native::engine::NativeEngine as wasmer_engine::engine::Engine>::validate (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless)
==13250==    by 0x59D494: wasmer::module::Module::from_binary (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless)
==13250==    by 0x2676A1: wasmer::module::Module::new (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless)
==13250==    by 0x268BFF: engine_headless::main (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless)
==13250==    by 0x2663C2: std::rt::lang_start::{{closure}} (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless)
==13250==    by 0x758F72: {{closure}} (rt.rs:52)
==13250==    by 0x758F72: do_call<closure-0,i32> (panicking.rs:348)
==13250==    by 0x758F72: try<i32,closure-0> (panicking.rs:325)
==13250==    by 0x758F72: catch_unwind<closure-0,i32> (panic.rs:394)
==13250==    by 0x758F72: std::rt::lang_start_internal (rt.rs:51)
==13250==    by 0x26A191: main (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless)
==13250== 
==13250== 
==13250== HEAP SUMMARY:
==13250==     in use at exit: 30,795 bytes in 101 blocks
==13250==   total heap usage: 782 allocs, 681 frees, 135,379 bytes allocated
==13250== 
==13250== 1,152 bytes in 4 blocks are possibly lost in loss record 34 of 41
==13250==    at 0x4C33B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==13250==    by 0x4013666: allocate_dtv (dl-tls.c:286)
==13250==    by 0x4013666: _dl_allocate_tls (dl-tls.c:530)
==13250==    by 0x5252227: allocate_stack (allocatestack.c:627)
==13250==    by 0x5252227: pthread_create@@GLIBC_2.2.5 (pthread_create.c:644)
==13250==    by 0x7675EC: std::sys::unix::thread::Thread::new (thread.rs:66)
==13250==    by 0x2FECE6: std::thread::Builder::spawn (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless)
==13250==    by 0x302066: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless)
==13250==    by 0x302C1F: rayon_core::registry::Registry::new (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless)
==13250==    by 0x305C16: std::sync::once::Once::call_once::{{closure}} (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless)
==13250==    by 0x752619: std::sync::once::Once::call_inner (once.rs:416)
==13250==    by 0x3021E0: rayon_core::registry::global_registry (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless)
==13250==    by 0x304FDB: rayon_core::current_num_threads (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless)
==13250==    by 0x2AE1C1: <rayon::iter::plumbing::bridge::Callback<C> as rayon::iter::plumbing::ProducerCallback<I>>::callback (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless)
==13250== 
==13250== 1,339 (416 direct, 923 indirect) bytes in 1 blocks are definitely lost in loss record 35 of 41
==13250==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==13250==    by 0x6CC48D: wasmer_vm::instance::InstanceHandle::allocate_instance (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless)
==13250==    by 0x277DBD: wasmer_engine::artifact::Artifact::instantiate (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless)
==13250==    by 0x59D84D: wasmer::module::Module::instantiate (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless)
==13250==    by 0x5A3042: wasmer::instance::Instance::new (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless)
==13250==    by 0x26944E: engine_headless::main (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless)
==13250==    by 0x2663C2: std::rt::lang_start::{{closure}} (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless)
==13250==    by 0x758F72: {{closure}} (rt.rs:52)
==13250==    by 0x758F72: do_call<closure-0,i32> (panicking.rs:348)
==13250==    by 0x758F72: try<i32,closure-0> (panicking.rs:325)
==13250==    by 0x758F72: catch_unwind<closure-0,i32> (panic.rs:394)
==13250==    by 0x758F72: std::rt::lang_start_internal (rt.rs:51)
==13250==    by 0x26A191: main (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/engine-headless)
==13250== 
==13250== LEAK SUMMARY:
==13250==    definitely lost: 416 bytes in 1 blocks
==13250==    indirectly lost: 923 bytes in 12 blocks
==13250==      possibly lost: 1,152 bytes in 4 blocks
==13250==    still reachable: 28,304 bytes in 84 blocks
==13250==         suppressed: 0 bytes in 0 blocks
==13250== Reachable blocks (those to which a pointer was found) are not shown.
==13250== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==13250== 
==13250== For counts of detected and suppressed errors, rerun with: -v
==13250== Use --track-origins=yes to see where uninitialised values come from
==13250== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
