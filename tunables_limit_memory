==2207== Memcheck, a memory error detector
==2207== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2207== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==2207== Command: /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b
==2207== 
--2207-- WARNING: unhandled amd64-linux syscall: 332
--2207-- You may be able to write your own handler.
--2207-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--2207-- Nevertheless we consider this a bug.  Please report
--2207-- it at http://valgrind.org/support/bug_reports.html.
==2207== Thread 2 test_tunables_li:
==2207== Conditional jump or move depends on uninitialised value(s)
==2207==    at 0x6EAF28: wasmparser::validator::Validator::end (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==2207==    by 0x6E0AAC: wasmparser::validator::Validator::payload (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==2207==    by 0x6DFD21: wasmparser::validator::Validator::validate_all (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==2207==    by 0x2EF47C: wasmer_compiler::compiler::Compiler::validate_module (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==2207==    by 0x2BAB98: <wasmer_engine_jit::engine::JITEngine as wasmer_engine::engine::Engine>::validate (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==2207==    by 0x5DBA74: wasmer::module::Module::from_binary (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==2207==    by 0x26DB41: wasmer::module::Module::new (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==2207==    by 0x26BE80: core::ops::function::FnOnce::call_once (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==2207==    by 0x29AE6B: call_once<(),FnOnce<()>> (boxed.rs:1081)
==2207==    by 0x29AE6B: call_once<(),alloc::boxed::Box<FnOnce<()>>> (panic.rs:318)
==2207==    by 0x29AE6B: do_call<std::panic::AssertUnwindSafe<alloc::boxed::Box<FnOnce<()>>>,()> (panicking.rs:348)
==2207==    by 0x29AE6B: try<(),std::panic::AssertUnwindSafe<alloc::boxed::Box<FnOnce<()>>>> (panicking.rs:325)
==2207==    by 0x29AE6B: catch_unwind<std::panic::AssertUnwindSafe<alloc::boxed::Box<FnOnce<()>>>,()> (panic.rs:394)
==2207==    by 0x29AE6B: run_test_in_process (lib.rs:541)
==2207==    by 0x29AE6B: test::run_test::run_test_inner::{{closure}} (lib.rs:450)
==2207==    by 0x26FF05: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:130)
==2207==    by 0x275CD4: {{closure}}<closure-0,()> (mod.rs:475)
==2207==    by 0x275CD4: call_once<(),closure-0> (panic.rs:318)
==2207==    by 0x275CD4: do_call<std::panic::AssertUnwindSafe<closure-0>,()> (panicking.rs:348)
==2207==    by 0x275CD4: try<(),std::panic::AssertUnwindSafe<closure-0>> (panicking.rs:325)
==2207==    by 0x275CD4: catch_unwind<std::panic::AssertUnwindSafe<closure-0>,()> (panic.rs:394)
==2207==    by 0x275CD4: {{closure}}<closure-0,()> (mod.rs:474)
==2207==    by 0x275CD4: core::ops::function::FnOnce::call_once{{vtable-shim}} (function.rs:233)
==2207==    by 0x79BB09: call_once<(),FnOnce<()>> (boxed.rs:1081)
==2207==    by 0x79BB09: call_once<(),alloc::boxed::Box<FnOnce<()>>> (boxed.rs:1081)
==2207==    by 0x79BB09: std::sys::unix::thread::Thread::new::thread_start (thread.rs:87)
==2207== 
==2207== Conditional jump or move depends on uninitialised value(s)
==2207==    at 0x6EAFAD: wasmparser::validator::Validator::end (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==2207==    by 0x6E0AAC: wasmparser::validator::Validator::payload (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==2207==    by 0x6DFD21: wasmparser::validator::Validator::validate_all (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==2207==    by 0x2EF47C: wasmer_compiler::compiler::Compiler::validate_module (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==2207==    by 0x2BAB98: <wasmer_engine_jit::engine::JITEngine as wasmer_engine::engine::Engine>::validate (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==2207==    by 0x5DBA74: wasmer::module::Module::from_binary (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==2207==    by 0x26DB41: wasmer::module::Module::new (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==2207==    by 0x26BE80: core::ops::function::FnOnce::call_once (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==2207==    by 0x29AE6B: call_once<(),FnOnce<()>> (boxed.rs:1081)
==2207==    by 0x29AE6B: call_once<(),alloc::boxed::Box<FnOnce<()>>> (panic.rs:318)
==2207==    by 0x29AE6B: do_call<std::panic::AssertUnwindSafe<alloc::boxed::Box<FnOnce<()>>>,()> (panicking.rs:348)
==2207==    by 0x29AE6B: try<(),std::panic::AssertUnwindSafe<alloc::boxed::Box<FnOnce<()>>>> (panicking.rs:325)
==2207==    by 0x29AE6B: catch_unwind<std::panic::AssertUnwindSafe<alloc::boxed::Box<FnOnce<()>>>,()> (panic.rs:394)
==2207==    by 0x29AE6B: run_test_in_process (lib.rs:541)
==2207==    by 0x29AE6B: test::run_test::run_test_inner::{{closure}} (lib.rs:450)
==2207==    by 0x26FF05: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:130)
==2207==    by 0x275CD4: {{closure}}<closure-0,()> (mod.rs:475)
==2207==    by 0x275CD4: call_once<(),closure-0> (panic.rs:318)
==2207==    by 0x275CD4: do_call<std::panic::AssertUnwindSafe<closure-0>,()> (panicking.rs:348)
==2207==    by 0x275CD4: try<(),std::panic::AssertUnwindSafe<closure-0>> (panicking.rs:325)
==2207==    by 0x275CD4: catch_unwind<std::panic::AssertUnwindSafe<closure-0>,()> (panic.rs:394)
==2207==    by 0x275CD4: {{closure}}<closure-0,()> (mod.rs:474)
==2207==    by 0x275CD4: core::ops::function::FnOnce::call_once{{vtable-shim}} (function.rs:233)
==2207==    by 0x79BB09: call_once<(),FnOnce<()>> (boxed.rs:1081)
==2207==    by 0x79BB09: call_once<(),alloc::boxed::Box<FnOnce<()>>> (boxed.rs:1081)
==2207==    by 0x79BB09: std::sys::unix::thread::Thread::new::thread_start (thread.rs:87)
==2207== 
==2207== Warning: set address range perms: large range [0x59e43000, 0x1d9e43000) (noaccess)
==2207== Warning: set address range perms: large range [0x59e43000, 0x1d9e43000) (noaccess)
==2207== 
==2207== HEAP SUMMARY:
==2207==     in use at exit: 22,208 bytes in 80 blocks
==2207==   total heap usage: 822 allocs, 742 frees, 121,528 bytes allocated
==2207== 
==2207== Thread 1:
==2207== 1,152 bytes in 4 blocks are possibly lost in loss record 22 of 28
==2207==    at 0x4C33B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2207==    by 0x4013666: allocate_dtv (dl-tls.c:286)
==2207==    by 0x4013666: _dl_allocate_tls (dl-tls.c:530)
==2207==    by 0x5252227: allocate_stack (allocatestack.c:627)
==2207==    by 0x5252227: pthread_create@@GLIBC_2.2.5 (pthread_create.c:644)
==2207==    by 0x79B83C: std::sys::unix::thread::Thread::new (thread.rs:66)
==2207==    by 0x332D76: std::thread::Builder::spawn (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==2207==    by 0x3360F6: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==2207==    by 0x336CAF: rayon_core::registry::Registry::new (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==2207==    by 0x339CA6: std::sync::once::Once::call_once::{{closure}} (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==2207==    by 0x786869: std::sync::once::Once::call_inner (once.rs:416)
==2207==    by 0x336270: rayon_core::registry::global_registry (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==2207==    by 0x33906B: rayon_core::current_num_threads (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==2207==    by 0x2E21E1: <rayon::iter::plumbing::bridge::Callback<C> as rayon::iter::plumbing::ProducerCallback<I>>::callback (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==2207== 
==2207== LEAK SUMMARY:
==2207==    definitely lost: 0 bytes in 0 blocks
==2207==    indirectly lost: 0 bytes in 0 blocks
==2207==      possibly lost: 1,152 bytes in 4 blocks
==2207==    still reachable: 21,056 bytes in 76 blocks
==2207==         suppressed: 0 bytes in 0 blocks
==2207== Reachable blocks (those to which a pointer was found) are not shown.
==2207== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==2207== 
==2207== For counts of detected and suppressed errors, rerun with: -v
==2207== Use --track-origins=yes to see where uninitialised values come from
==2207== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
