==4339== Memcheck, a memory error detector
==4339== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==4339== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==4339== Command: /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b
==4339== 
--4339-- WARNING: unhandled amd64-linux syscall: 332
--4339-- You may be able to write your own handler.
--4339-- Read the file README_MISSING_SYSCALL_OR_IOCTL.
--4339-- Nevertheless we consider this a bug.  Please report
--4339-- it at http://valgrind.org/support/bug_reports.html.
==4339== Thread 2 test_tunables_li:
==4339== Conditional jump or move depends on uninitialised value(s)
==4339==    at 0x6ED7A8: wasmparser::validator::Validator::end (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x6E332C: wasmparser::validator::Validator::payload (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x6E25A1: wasmparser::validator::Validator::validate_all (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x2F002C: wasmer_compiler::compiler::Compiler::validate_module (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x2BB758: <wasmer_engine_jit::engine::JITEngine as wasmer_engine::engine::Engine>::validate (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x5DD034: wasmer::module::Module::from_binary (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x26E5A1: wasmer::module::Module::new (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x26C8B0: core::ops::function::FnOnce::call_once (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x29BA2B: call_once<(),FnOnce<()>> (boxed.rs:1081)
==4339==    by 0x29BA2B: call_once<(),alloc::boxed::Box<FnOnce<()>>> (panic.rs:318)
==4339==    by 0x29BA2B: do_call<std::panic::AssertUnwindSafe<alloc::boxed::Box<FnOnce<()>>>,()> (panicking.rs:348)
==4339==    by 0x29BA2B: try<(),std::panic::AssertUnwindSafe<alloc::boxed::Box<FnOnce<()>>>> (panicking.rs:325)
==4339==    by 0x29BA2B: catch_unwind<std::panic::AssertUnwindSafe<alloc::boxed::Box<FnOnce<()>>>,()> (panic.rs:394)
==4339==    by 0x29BA2B: run_test_in_process (lib.rs:541)
==4339==    by 0x29BA2B: test::run_test::run_test_inner::{{closure}} (lib.rs:450)
==4339==    by 0x270AC5: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:130)
==4339==    by 0x276894: {{closure}}<closure-0,()> (mod.rs:475)
==4339==    by 0x276894: call_once<(),closure-0> (panic.rs:318)
==4339==    by 0x276894: do_call<std::panic::AssertUnwindSafe<closure-0>,()> (panicking.rs:348)
==4339==    by 0x276894: try<(),std::panic::AssertUnwindSafe<closure-0>> (panicking.rs:325)
==4339==    by 0x276894: catch_unwind<std::panic::AssertUnwindSafe<closure-0>,()> (panic.rs:394)
==4339==    by 0x276894: {{closure}}<closure-0,()> (mod.rs:474)
==4339==    by 0x276894: core::ops::function::FnOnce::call_once{{vtable-shim}} (function.rs:233)
==4339==    by 0x79E659: call_once<(),FnOnce<()>> (boxed.rs:1081)
==4339==    by 0x79E659: call_once<(),alloc::boxed::Box<FnOnce<()>>> (boxed.rs:1081)
==4339==    by 0x79E659: std::sys::unix::thread::Thread::new::thread_start (thread.rs:87)
==4339== 
==4339== Conditional jump or move depends on uninitialised value(s)
==4339==    at 0x6ED82D: wasmparser::validator::Validator::end (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x6E332C: wasmparser::validator::Validator::payload (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x6E25A1: wasmparser::validator::Validator::validate_all (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x2F002C: wasmer_compiler::compiler::Compiler::validate_module (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x2BB758: <wasmer_engine_jit::engine::JITEngine as wasmer_engine::engine::Engine>::validate (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x5DD034: wasmer::module::Module::from_binary (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x26E5A1: wasmer::module::Module::new (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x26C8B0: core::ops::function::FnOnce::call_once (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x29BA2B: call_once<(),FnOnce<()>> (boxed.rs:1081)
==4339==    by 0x29BA2B: call_once<(),alloc::boxed::Box<FnOnce<()>>> (panic.rs:318)
==4339==    by 0x29BA2B: do_call<std::panic::AssertUnwindSafe<alloc::boxed::Box<FnOnce<()>>>,()> (panicking.rs:348)
==4339==    by 0x29BA2B: try<(),std::panic::AssertUnwindSafe<alloc::boxed::Box<FnOnce<()>>>> (panicking.rs:325)
==4339==    by 0x29BA2B: catch_unwind<std::panic::AssertUnwindSafe<alloc::boxed::Box<FnOnce<()>>>,()> (panic.rs:394)
==4339==    by 0x29BA2B: run_test_in_process (lib.rs:541)
==4339==    by 0x29BA2B: test::run_test::run_test_inner::{{closure}} (lib.rs:450)
==4339==    by 0x270AC5: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:130)
==4339==    by 0x276894: {{closure}}<closure-0,()> (mod.rs:475)
==4339==    by 0x276894: call_once<(),closure-0> (panic.rs:318)
==4339==    by 0x276894: do_call<std::panic::AssertUnwindSafe<closure-0>,()> (panicking.rs:348)
==4339==    by 0x276894: try<(),std::panic::AssertUnwindSafe<closure-0>> (panicking.rs:325)
==4339==    by 0x276894: catch_unwind<std::panic::AssertUnwindSafe<closure-0>,()> (panic.rs:394)
==4339==    by 0x276894: {{closure}}<closure-0,()> (mod.rs:474)
==4339==    by 0x276894: core::ops::function::FnOnce::call_once{{vtable-shim}} (function.rs:233)
==4339==    by 0x79E659: call_once<(),FnOnce<()>> (boxed.rs:1081)
==4339==    by 0x79E659: call_once<(),alloc::boxed::Box<FnOnce<()>>> (boxed.rs:1081)
==4339==    by 0x79E659: std::sys::unix::thread::Thread::new::thread_start (thread.rs:87)
==4339== 
==4339== Warning: set address range perms: large range [0x59e43000, 0x1d9e43000) (noaccess)
==4339== Invalid write of size 8
==4339==    at 0x7123A4: wasmer_vm::memory::LinearMemory::new_internal (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x7120D8: wasmer_vm::memory::LinearMemory::from_definition (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x5E0DD1: <wasmer::tunables::Tunables as wasmer_engine::tunables::Tunables>::create_vm_memory (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x26E054: <tunables_limit_memory::LimitingTunables<T> as wasmer_engine::tunables::Tunables>::create_vm_memory (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x26C2B8: wasmer_engine::tunables::Tunables::create_memories (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x2D6A39: wasmer_engine::artifact::Artifact::instantiate (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x5DD3EE: wasmer::module::Module::instantiate (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x5DBA90: wasmer::instance::Instance::new (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x26CA17: core::ops::function::FnOnce::call_once (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x29BA2B: call_once<(),FnOnce<()>> (boxed.rs:1081)
==4339==    by 0x29BA2B: call_once<(),alloc::boxed::Box<FnOnce<()>>> (panic.rs:318)
==4339==    by 0x29BA2B: do_call<std::panic::AssertUnwindSafe<alloc::boxed::Box<FnOnce<()>>>,()> (panicking.rs:348)
==4339==    by 0x29BA2B: try<(),std::panic::AssertUnwindSafe<alloc::boxed::Box<FnOnce<()>>>> (panicking.rs:325)
==4339==    by 0x29BA2B: catch_unwind<std::panic::AssertUnwindSafe<alloc::boxed::Box<FnOnce<()>>>,()> (panic.rs:394)
==4339==    by 0x29BA2B: run_test_in_process (lib.rs:541)
==4339==    by 0x29BA2B: test::run_test::run_test_inner::{{closure}} (lib.rs:450)
==4339==    by 0x270AC5: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:130)
==4339==    by 0x276894: {{closure}}<closure-0,()> (mod.rs:475)
==4339==    by 0x276894: call_once<(),closure-0> (panic.rs:318)
==4339==    by 0x276894: do_call<std::panic::AssertUnwindSafe<closure-0>,()> (panicking.rs:348)
==4339==    by 0x276894: try<(),std::panic::AssertUnwindSafe<closure-0>> (panicking.rs:325)
==4339==    by 0x276894: catch_unwind<std::panic::AssertUnwindSafe<closure-0>,()> (panic.rs:394)
==4339==    by 0x276894: {{closure}}<closure-0,()> (mod.rs:474)
==4339==    by 0x276894: core::ops::function::FnOnce::call_once{{vtable-shim}} (function.rs:233)
==4339==  Address 0x5e4c170 is 82,192 bytes inside an unallocated block of size 4,030,336 in arena "client"
==4339== 
==4339== Invalid write of size 4
==4339==    at 0x7123A7: wasmer_vm::memory::LinearMemory::new_internal (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x7120D8: wasmer_vm::memory::LinearMemory::from_definition (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x5E0DD1: <wasmer::tunables::Tunables as wasmer_engine::tunables::Tunables>::create_vm_memory (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x26E054: <tunables_limit_memory::LimitingTunables<T> as wasmer_engine::tunables::Tunables>::create_vm_memory (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x26C2B8: wasmer_engine::tunables::Tunables::create_memories (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x2D6A39: wasmer_engine::artifact::Artifact::instantiate (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x5DD3EE: wasmer::module::Module::instantiate (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x5DBA90: wasmer::instance::Instance::new (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x26CA17: core::ops::function::FnOnce::call_once (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x29BA2B: call_once<(),FnOnce<()>> (boxed.rs:1081)
==4339==    by 0x29BA2B: call_once<(),alloc::boxed::Box<FnOnce<()>>> (panic.rs:318)
==4339==    by 0x29BA2B: do_call<std::panic::AssertUnwindSafe<alloc::boxed::Box<FnOnce<()>>>,()> (panicking.rs:348)
==4339==    by 0x29BA2B: try<(),std::panic::AssertUnwindSafe<alloc::boxed::Box<FnOnce<()>>>> (panicking.rs:325)
==4339==    by 0x29BA2B: catch_unwind<std::panic::AssertUnwindSafe<alloc::boxed::Box<FnOnce<()>>>,()> (panic.rs:394)
==4339==    by 0x29BA2B: run_test_in_process (lib.rs:541)
==4339==    by 0x29BA2B: test::run_test::run_test_inner::{{closure}} (lib.rs:450)
==4339==    by 0x270AC5: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:130)
==4339==    by 0x276894: {{closure}}<closure-0,()> (mod.rs:475)
==4339==    by 0x276894: call_once<(),closure-0> (panic.rs:318)
==4339==    by 0x276894: do_call<std::panic::AssertUnwindSafe<closure-0>,()> (panicking.rs:348)
==4339==    by 0x276894: try<(),std::panic::AssertUnwindSafe<closure-0>> (panicking.rs:325)
==4339==    by 0x276894: catch_unwind<std::panic::AssertUnwindSafe<closure-0>,()> (panic.rs:394)
==4339==    by 0x276894: {{closure}}<closure-0,()> (mod.rs:474)
==4339==    by 0x276894: core::ops::function::FnOnce::call_once{{vtable-shim}} (function.rs:233)
==4339==  Address 0x5e4c178 is 82,200 bytes inside an unallocated block of size 4,030,336 in arena "client"
==4339== 
==4339== Warning: set address range perms: large range [0x59e43000, 0x1d9e43000) (noaccess)
==4339== 
==4339== HEAP SUMMARY:
==4339==     in use at exit: 29,456 bytes in 88 blocks
==4339==   total heap usage: 833 allocs, 745 frees, 129,425 bytes allocated
==4339== 
==4339== Thread 1:
==4339== 1,152 bytes in 4 blocks are possibly lost in loss record 23 of 30
==4339==    at 0x4C33B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4339==    by 0x4013666: allocate_dtv (dl-tls.c:286)
==4339==    by 0x4013666: _dl_allocate_tls (dl-tls.c:530)
==4339==    by 0x5252227: allocate_stack (allocatestack.c:627)
==4339==    by 0x5252227: pthread_create@@GLIBC_2.2.5 (pthread_create.c:644)
==4339==    by 0x79E38C: std::sys::unix::thread::Thread::new (thread.rs:66)
==4339==    by 0x333926: std::thread::Builder::spawn (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x336CA6: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x33785F: rayon_core::registry::Registry::new (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x33A856: std::sync::once::Once::call_once::{{closure}} (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x7893B9: std::sync::once::Once::call_inner (once.rs:416)
==4339==    by 0x336E20: rayon_core::registry::global_registry (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x339C1B: rayon_core::current_num_threads (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339==    by 0x2E2D91: <rayon::iter::plumbing::bridge::Callback<C> as rayon::iter::plumbing::ProducerCallback<I>>::callback (in /home/wasmer/repositories/wasmer/wasmer/target/release/examples/tunables_limit_memory-6a2881e275b29a6b)
==4339== 
==4339== LEAK SUMMARY:
==4339==    definitely lost: 0 bytes in 0 blocks
==4339==    indirectly lost: 0 bytes in 0 blocks
==4339==      possibly lost: 1,152 bytes in 4 blocks
==4339==    still reachable: 28,304 bytes in 84 blocks
==4339==         suppressed: 0 bytes in 0 blocks
==4339== Reachable blocks (those to which a pointer was found) are not shown.
==4339== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==4339== 
==4339== For counts of detected and suppressed errors, rerun with: -v
==4339== Use --track-origins=yes to see where uninitialised values come from
==4339== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)
