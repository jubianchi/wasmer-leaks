==11324== Memcheck, a memory error detector
==11324== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11324== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==11324== Command: /home/wasmer/repositories/wasmer/wasmer/target/debug/examples/compiler-cranelift
==11324== 
==11324== 
==11324== HEAP SUMMARY:
==11324==     in use at exit: 13,184 bytes in 71 blocks
==11324==   total heap usage: 521 allocs, 450 frees, 88,324 bytes allocated
==11324== 
==11324== 32 bytes in 1 blocks are still reachable in loss record 1 of 23
==11324==    at 0x4C33B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0x4E3F7F4: _dlerror_run (dlerror.c:140)
==11324==    by 0x4E3F165: dlsym (dlsym.c:70)
==11324==    by 0x1C2C033: fetch (weak.rs:61)
==11324==    by 0x1C2C033: get<unsafe extern "C" fn(*const libc::unix::linux_like::linux::gnu::b64::x86_64::pthread_attr_t) -> usize> (weak.rs:46)
==11324==    by 0x1C2C033: min_stack_size (thread.rs:449)
==11324==    by 0x1C2C033: std::sys::unix::thread::Thread::new (thread.rs:49)
==11324==    by 0xD6508B: std::thread::Builder::spawn_unchecked (mod.rs:492)
==11324==    by 0xD6730B: std::thread::Builder::spawn (mod.rs:386)
==11324==    by 0xD35DF8: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (registry.rs:100)
==11324==    by 0xD36F3F: rayon_core::registry::Registry::new (registry.rs:256)
==11324==    by 0xD3606D: rayon_core::registry::global_registry::{{closure}} (registry.rs:168)
==11324==    by 0xD36529: rayon_core::registry::set_global_registry::{{closure}} (registry.rs:195)
==11324==    by 0xD59BF3: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11324==    by 0x1C17109: std::sync::once::Once::call_inner (once.rs:416)
==11324== 
==11324== 64 bytes in 4 blocks are still reachable in loss record 2 of 23
==11324==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0xD5FB4B: alloc::alloc::alloc (alloc.rs:80)
==11324==    by 0xD60973: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11324==    by 0xD5FAAC: alloc::alloc::exchange_malloc (alloc.rs:277)
==11324==    by 0xD45FF6: new<crossbeam_deque::deque::Buffer<rayon_core::job::JobRef>> (boxed.rs:177)
==11324==    by 0xD45FF6: <T as crossbeam_epoch::atomic::Pointable>::init (atomic.rs:188)
==11324==    by 0xD61813: crossbeam_epoch::atomic::Owned<T>::init (atomic.rs:861)
==11324==    by 0xD61963: crossbeam_epoch::atomic::Atomic<T>::init (atomic.rs:309)
==11324==    by 0xD61933: crossbeam_epoch::atomic::Atomic<T>::new (atomic.rs:294)
==11324==    by 0xD446F6: crossbeam_deque::deque::Worker<T>::new_lifo (deque.rs:253)
==11324==    by 0xD373BE: rayon_core::registry::Registry::new::{{closure}} (registry.rs:225)
==11324==    by 0xD7010C: core::iter::adapters::map_fold::{{closure}} (mod.rs:833)
==11324==    by 0xD3F48D: core::iter::traits::iterator::Iterator::fold (iterator.rs:2022)
==11324== 
==11324== 64 bytes in 4 blocks are still reachable in loss record 3 of 23
==11324==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0x1C2BF8C: alloc (alloc.rs:80)
==11324==    by 0x1C2BF8C: alloc (alloc.rs:174)
==11324==    by 0x1C2BF8C: exchange_malloc (alloc.rs:277)
==11324==    by 0x1C2BF8C: std::sys::unix::thread::Thread::new (thread.rs:44)
==11324==    by 0xD6508B: std::thread::Builder::spawn_unchecked (mod.rs:492)
==11324==    by 0xD6730B: std::thread::Builder::spawn (mod.rs:386)
==11324==    by 0xD35DF8: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (registry.rs:100)
==11324==    by 0xD36F3F: rayon_core::registry::Registry::new (registry.rs:256)
==11324==    by 0xD3606D: rayon_core::registry::global_registry::{{closure}} (registry.rs:168)
==11324==    by 0xD36529: rayon_core::registry::set_global_registry::{{closure}} (registry.rs:195)
==11324==    by 0xD59BF3: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11324==    by 0x1C17109: std::sync::once::Once::call_inner (once.rs:416)
==11324==    by 0xD59990: std::sync::once::Once::call_once (once.rs:264)
==11324==    by 0xD36376: rayon_core::registry::set_global_registry (registry.rs:194)
==11324== 
==11324== 72 bytes in 1 blocks are still reachable in loss record 4 of 23
==11324==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0x181E71B: alloc::alloc::alloc (alloc.rs:80)
==11324==    by 0x181E843: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11324==    by 0x181E67C: alloc::alloc::exchange_malloc (alloc.rs:277)
==11324==    by 0x1821537: std::sync::rwlock::RwLock<T>::new (rwlock.rs:134)
==11324==    by 0x182186C: <std::sync::rwlock::RwLock<T> as core::default::Default>::default (rwlock.rs:451)
==11324==    by 0x18131E0: __static_ref_initialize (frame_info.rs:28)
==11324==    by 0x18131E0: core::ops::function::FnOnce::call_once (function.rs:233)
==11324==    by 0x184AEFB: lazy_static::lazy::Lazy<T>::get::{{closure}} (inline_lazy.rs:31)
==11324==    by 0x1849874: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11324==    by 0x1C17109: std::sync::once::Once::call_inner (once.rs:416)
==11324==    by 0x18497F0: std::sync::once::Once::call_once (once.rs:264)
==11324==    by 0x180E608: get<std::sync::rwlock::RwLock<wasmer_engine::trap::frame_info::GlobalFrameInfo>,fn() -> std::sync::rwlock::RwLock<wasmer_engine::trap::frame_info::GlobalFrameInfo>> (inline_lazy.rs:30)
==11324==    by 0x180E608: __stability (lib.rs:142)
==11324==    by 0x180E608: <wasmer_engine::trap::frame_info::FRAME_INFO as core::ops::deref::Deref>::deref (lib.rs:144)
==11324== 
==11324== 160 bytes in 4 blocks are still reachable in loss record 5 of 23
==11324==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0xD5FB4B: alloc::alloc::alloc (alloc.rs:80)
==11324==    by 0xD60973: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11324==    by 0xD5FAAC: alloc::alloc::exchange_malloc (alloc.rs:277)
==11324==    by 0xD6486F: std::sync::mutex::Mutex<T>::new (mutex.rs:223)
==11324==    by 0xD77F80: rayon_core::latch::LockLatch::new (latch.rs:230)
==11324==    by 0xD3816C: rayon_core::registry::ThreadInfo::new (registry.rs:579)
==11324==    by 0xD5A931: core::ops::function::FnMut::call_mut (function.rs:154)
==11324==    by 0xD708F3: core::iter::adapters::map_fold::{{closure}} (mod.rs:833)
==11324==    by 0xD53913: core::iter::traits::iterator::Iterator::fold (iterator.rs:2022)
==11324==    by 0xD715D8: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (mod.rs:873)
==11324==    by 0xD6F799: core::iter::traits::iterator::Iterator::for_each (iterator.rs:658)
==11324== 
==11324== 160 bytes in 4 blocks are still reachable in loss record 6 of 23
==11324==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0xD5FB4B: alloc::alloc::alloc (alloc.rs:80)
==11324==    by 0xD60973: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11324==    by 0xD5FAAC: alloc::alloc::exchange_malloc (alloc.rs:277)
==11324==    by 0xD6486F: std::sync::mutex::Mutex<T>::new (mutex.rs:223)
==11324==    by 0xD77F80: rayon_core::latch::LockLatch::new (latch.rs:230)
==11324==    by 0xD38184: rayon_core::registry::ThreadInfo::new (registry.rs:580)
==11324==    by 0xD5A931: core::ops::function::FnMut::call_mut (function.rs:154)
==11324==    by 0xD708F3: core::iter::adapters::map_fold::{{closure}} (mod.rs:833)
==11324==    by 0xD53913: core::iter::traits::iterator::Iterator::fold (iterator.rs:2022)
==11324==    by 0xD715D8: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (mod.rs:873)
==11324==    by 0xD6F799: core::iter::traits::iterator::Iterator::for_each (iterator.rs:658)
==11324== 
==11324== 160 bytes in 4 blocks are still reachable in loss record 7 of 23
==11324==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0xD5FB4B: alloc::alloc::alloc (alloc.rs:80)
==11324==    by 0xD60973: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11324==    by 0xD5FAAC: alloc::alloc::exchange_malloc (alloc.rs:277)
==11324==    by 0xD6486F: std::sync::mutex::Mutex<T>::new (mutex.rs:223)
==11324==    by 0xD68133: <std::sync::mutex::Mutex<T> as core::default::Default>::default (mutex.rs:446)
==11324==    by 0xD52DDE: <rayon_core::sleep::WorkerSleepState as core::default::Default>::default (mod.rs:55)
==11324==    by 0xD5028D: <crossbeam_utils::cache_padded::CachePadded<T> as core::default::Default>::default (cache_padded.rs:77)
==11324==    by 0xD5167A: rayon_core::sleep::Sleep::new::{{closure}} (mod.rs:67)
==11324==    by 0xD705C0: core::iter::adapters::map_fold::{{closure}} (mod.rs:833)
==11324==    by 0xD3F768: core::iter::traits::iterator::Iterator::fold (iterator.rs:2022)
==11324==    by 0xD71519: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (mod.rs:873)
==11324== 
==11324== 160 bytes in 4 blocks are still reachable in loss record 8 of 23
==11324==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0x1BF995E: alloc (alloc.rs:80)
==11324==    by 0x1BF995E: alloc (alloc.rs:174)
==11324==    by 0x1BF995E: exchange_malloc (alloc.rs:277)
==11324==    by 0x1BF995E: new<()> (mutex.rs:223)
==11324==    by 0x1BF995E: std::thread::Thread::new (mod.rs:1149)
==11324==    by 0xD64E2D: std::thread::Builder::spawn_unchecked (mod.rs:462)
==11324==    by 0xD6730B: std::thread::Builder::spawn (mod.rs:386)
==11324==    by 0xD35DF8: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (registry.rs:100)
==11324==    by 0xD36F3F: rayon_core::registry::Registry::new (registry.rs:256)
==11324==    by 0xD3606D: rayon_core::registry::global_registry::{{closure}} (registry.rs:168)
==11324==    by 0xD36529: rayon_core::registry::set_global_registry::{{closure}} (registry.rs:195)
==11324==    by 0xD59BF3: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11324==    by 0x1C17109: std::sync::once::Once::call_inner (once.rs:416)
==11324==    by 0xD59990: std::sync::once::Once::call_once (once.rs:264)
==11324==    by 0xD36376: rayon_core::registry::set_global_registry (registry.rs:194)
==11324== 
==11324== 160 bytes in 4 blocks are still reachable in loss record 9 of 23
==11324==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0xD5FB4B: alloc::alloc::alloc (alloc.rs:80)
==11324==    by 0xD60973: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11324==    by 0xD5FAAC: alloc::alloc::exchange_malloc (alloc.rs:277)
==11324==    by 0xD2F477: alloc::sync::Arc<T>::new (sync.rs:324)
==11324==    by 0xD64ECB: std::thread::Builder::spawn_unchecked (mod.rs:465)
==11324==    by 0xD6730B: std::thread::Builder::spawn (mod.rs:386)
==11324==    by 0xD35DF8: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (registry.rs:100)
==11324==    by 0xD36F3F: rayon_core::registry::Registry::new (registry.rs:256)
==11324==    by 0xD3606D: rayon_core::registry::global_registry::{{closure}} (registry.rs:168)
==11324==    by 0xD36529: rayon_core::registry::set_global_registry::{{closure}} (registry.rs:195)
==11324==    by 0xD59BF3: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11324== 
==11324== 192 bytes in 4 blocks are still reachable in loss record 10 of 23
==11324==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0x1C16A56: alloc (alloc.rs:80)
==11324==    by 0x1C16A56: alloc (alloc.rs:174)
==11324==    by 0x1C16A56: exchange_malloc (alloc.rs:277)
==11324==    by 0x1C16A56: std::sync::condvar::Condvar::new (condvar.rs:130)
==11324==    by 0xD77F9C: rayon_core::latch::LockLatch::new (latch.rs:231)
==11324==    by 0xD3816C: rayon_core::registry::ThreadInfo::new (registry.rs:579)
==11324==    by 0xD5A931: core::ops::function::FnMut::call_mut (function.rs:154)
==11324==    by 0xD708F3: core::iter::adapters::map_fold::{{closure}} (mod.rs:833)
==11324==    by 0xD53913: core::iter::traits::iterator::Iterator::fold (iterator.rs:2022)
==11324==    by 0xD715D8: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (mod.rs:873)
==11324==    by 0xD6F799: core::iter::traits::iterator::Iterator::for_each (iterator.rs:658)
==11324==    by 0xD57791: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::spec_extend (vec.rs:2140)
==11324==    by 0xD57E74: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter (vec.rs:2120)
==11324==    by 0xD58FA6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (vec.rs:1995)
==11324== 
==11324== 192 bytes in 4 blocks are still reachable in loss record 11 of 23
==11324==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0x1C16A56: alloc (alloc.rs:80)
==11324==    by 0x1C16A56: alloc (alloc.rs:174)
==11324==    by 0x1C16A56: exchange_malloc (alloc.rs:277)
==11324==    by 0x1C16A56: std::sync::condvar::Condvar::new (condvar.rs:130)
==11324==    by 0xD77F9C: rayon_core::latch::LockLatch::new (latch.rs:231)
==11324==    by 0xD38184: rayon_core::registry::ThreadInfo::new (registry.rs:580)
==11324==    by 0xD5A931: core::ops::function::FnMut::call_mut (function.rs:154)
==11324==    by 0xD708F3: core::iter::adapters::map_fold::{{closure}} (mod.rs:833)
==11324==    by 0xD53913: core::iter::traits::iterator::Iterator::fold (iterator.rs:2022)
==11324==    by 0xD715D8: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (mod.rs:873)
==11324==    by 0xD6F799: core::iter::traits::iterator::Iterator::for_each (iterator.rs:658)
==11324==    by 0xD57791: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::spec_extend (vec.rs:2140)
==11324==    by 0xD57E74: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter (vec.rs:2120)
==11324==    by 0xD58FA6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (vec.rs:1995)
==11324== 
==11324== 192 bytes in 4 blocks are still reachable in loss record 12 of 23
==11324==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0x1C16A56: alloc (alloc.rs:80)
==11324==    by 0x1C16A56: alloc (alloc.rs:174)
==11324==    by 0x1C16A56: exchange_malloc (alloc.rs:277)
==11324==    by 0x1C16A56: std::sync::condvar::Condvar::new (condvar.rs:130)
==11324==    by 0xD52DFA: <rayon_core::sleep::WorkerSleepState as core::default::Default>::default (mod.rs:57)
==11324==    by 0xD5028D: <crossbeam_utils::cache_padded::CachePadded<T> as core::default::Default>::default (cache_padded.rs:77)
==11324==    by 0xD5167A: rayon_core::sleep::Sleep::new::{{closure}} (mod.rs:67)
==11324==    by 0xD705C0: core::iter::adapters::map_fold::{{closure}} (mod.rs:833)
==11324==    by 0xD3F768: core::iter::traits::iterator::Iterator::fold (iterator.rs:2022)
==11324==    by 0xD71519: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (mod.rs:873)
==11324==    by 0xD6F66A: core::iter::traits::iterator::Iterator::for_each (iterator.rs:658)
==11324==    by 0xD57397: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::spec_extend (vec.rs:2140)
==11324==    by 0xD57FC1: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter (vec.rs:2120)
==11324==    by 0xD59005: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (vec.rs:1995)
==11324== 
==11324== 192 bytes in 4 blocks are still reachable in loss record 13 of 23
==11324==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0x1BF99C2: alloc (alloc.rs:80)
==11324==    by 0x1BF99C2: alloc (alloc.rs:174)
==11324==    by 0x1BF99C2: exchange_malloc (alloc.rs:277)
==11324==    by 0x1BF99C2: new (condvar.rs:130)
==11324==    by 0x1BF99C2: std::thread::Thread::new (mod.rs:1150)
==11324==    by 0xD64E2D: std::thread::Builder::spawn_unchecked (mod.rs:462)
==11324==    by 0xD6730B: std::thread::Builder::spawn (mod.rs:386)
==11324==    by 0xD35DF8: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (registry.rs:100)
==11324==    by 0xD36F3F: rayon_core::registry::Registry::new (registry.rs:256)
==11324==    by 0xD3606D: rayon_core::registry::global_registry::{{closure}} (registry.rs:168)
==11324==    by 0xD36529: rayon_core::registry::set_global_registry::{{closure}} (registry.rs:195)
==11324==    by 0xD59BF3: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11324==    by 0x1C17109: std::sync::once::Once::call_inner (once.rs:416)
==11324==    by 0xD59990: std::sync::once::Once::call_once (once.rs:264)
==11324==    by 0xD36376: rayon_core::registry::set_global_registry (registry.rs:194)
==11324== 
==11324== 320 bytes in 4 blocks are still reachable in loss record 14 of 23
==11324==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0x1BF9A11: alloc (alloc.rs:80)
==11324==    by 0x1BF9A11: alloc (alloc.rs:174)
==11324==    by 0x1BF9A11: exchange_malloc (alloc.rs:277)
==11324==    by 0x1BF9A11: new<std::thread::Inner> (sync.rs:324)
==11324==    by 0x1BF9A11: std::thread::Thread::new (mod.rs:1145)
==11324==    by 0xD64E2D: std::thread::Builder::spawn_unchecked (mod.rs:462)
==11324==    by 0xD6730B: std::thread::Builder::spawn (mod.rs:386)
==11324==    by 0xD35DF8: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (registry.rs:100)
==11324==    by 0xD36F3F: rayon_core::registry::Registry::new (registry.rs:256)
==11324==    by 0xD3606D: rayon_core::registry::global_registry::{{closure}} (registry.rs:168)
==11324==    by 0xD36529: rayon_core::registry::set_global_registry::{{closure}} (registry.rs:195)
==11324==    by 0xD59BF3: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11324==    by 0x1C17109: std::sync::once::Once::call_inner (once.rs:416)
==11324==    by 0xD59990: std::sync::once::Once::call_once (once.rs:264)
==11324==    by 0xD36376: rayon_core::registry::set_global_registry (registry.rs:194)
==11324== 
==11324== 384 bytes in 1 blocks are still reachable in loss record 15 of 23
==11324==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0xDC6CFB: alloc::alloc::alloc (alloc.rs:80)
==11324==    by 0xDC75A3: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11324==    by 0xDBE0BA: alloc::raw_vec::finish_grow (raw_vec.rs:497)
==11324==    by 0xD7B400: alloc::raw_vec::RawVec<T,A>::grow_amortized (raw_vec.rs:429)
==11324==    by 0xD79613: alloc::raw_vec::RawVec<T,A>::try_reserve (raw_vec.rs:310)
==11324==    by 0xD7CED2: alloc::raw_vec::RawVec<T,A>::reserve (raw_vec.rs:300)
==11324==    by 0xD561B8: alloc::vec::Vec<T>::reserve (vec.rs:505)
==11324==    by 0xD576A7: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::spec_extend (vec.rs:2136)
==11324==    by 0xD57E74: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter (vec.rs:2120)
==11324==    by 0xD58FA6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (vec.rs:1995)
==11324==    by 0xD6F428: core::iter::traits::iterator::Iterator::collect (iterator.rs:1671)
==11324== 
==11324== 416 bytes in 4 blocks are still reachable in loss record 16 of 23
==11324==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0xD5FB4B: alloc::alloc::alloc (alloc.rs:80)
==11324==    by 0xD60973: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11324==    by 0xD5FAAC: alloc::alloc::exchange_malloc (alloc.rs:277)
==11324==    by 0xD64FF7: new<closure-0> (boxed.rs:177)
==11324==    by 0xD64FF7: std::thread::Builder::spawn_unchecked (mod.rs:494)
==11324==    by 0xD6730B: std::thread::Builder::spawn (mod.rs:386)
==11324==    by 0xD35DF8: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (registry.rs:100)
==11324==    by 0xD36F3F: rayon_core::registry::Registry::new (registry.rs:256)
==11324==    by 0xD3606D: rayon_core::registry::global_registry::{{closure}} (registry.rs:168)
==11324==    by 0xD36529: rayon_core::registry::set_global_registry::{{closure}} (registry.rs:195)
==11324==    by 0xD59BF3: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11324==    by 0x1C17109: std::sync::once::Once::call_inner (once.rs:416)
==11324== 
==11324== 512 bytes in 1 blocks are still reachable in loss record 17 of 23
==11324==    at 0x4C33E76: memalign (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0x4C33F91: posix_memalign (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0x1C1C4C9: aligned_malloc (alloc.rs:95)
==11324==    by 0x1C1C4C9: alloc (alloc.rs:22)
==11324==    by 0x1C1C4C9: __rdl_alloc (alloc.rs:304)
==11324==    by 0xDC6CFB: alloc::alloc::alloc (alloc.rs:80)
==11324==    by 0xDC75A3: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11324==    by 0xDBE0BA: alloc::raw_vec::finish_grow (raw_vec.rs:497)
==11324==    by 0xD7B0A0: alloc::raw_vec::RawVec<T,A>::grow_amortized (raw_vec.rs:429)
==11324==    by 0xD79513: alloc::raw_vec::RawVec<T,A>::try_reserve (raw_vec.rs:310)
==11324==    by 0xD7D012: alloc::raw_vec::RawVec<T,A>::reserve (raw_vec.rs:300)
==11324==    by 0xD56188: alloc::vec::Vec<T>::reserve (vec.rs:505)
==11324==    by 0xD572D7: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::spec_extend (vec.rs:2136)
==11324==    by 0xD57FC1: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter (vec.rs:2120)
==11324== 
==11324== 640 bytes in 1 blocks are still reachable in loss record 18 of 23
==11324==    at 0x4C33E76: memalign (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0x4C33F91: posix_memalign (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0x1C1C4C9: aligned_malloc (alloc.rs:95)
==11324==    by 0x1C1C4C9: alloc (alloc.rs:22)
==11324==    by 0x1C1C4C9: __rdl_alloc (alloc.rs:304)
==11324==    by 0xD5FB4B: alloc::alloc::alloc (alloc.rs:80)
==11324==    by 0xD60973: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11324==    by 0xD5FAAC: alloc::alloc::exchange_malloc (alloc.rs:277)
==11324==    by 0xD2F2A5: alloc::sync::Arc<T>::new (sync.rs:324)
==11324==    by 0xD36B37: rayon_core::registry::Registry::new (registry.rs:234)
==11324==    by 0xD3606D: rayon_core::registry::global_registry::{{closure}} (registry.rs:168)
==11324==    by 0xD36529: rayon_core::registry::set_global_registry::{{closure}} (registry.rs:195)
==11324==    by 0xD59BF3: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11324==    by 0x1C17109: std::sync::once::Once::call_inner (once.rs:416)
==11324== 
==11324== 808 bytes in 1 blocks are still reachable in loss record 19 of 23
==11324==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0x181E71B: alloc::alloc::alloc (alloc.rs:80)
==11324==    by 0x181E843: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11324==    by 0x181E67C: alloc::alloc::exchange_malloc (alloc.rs:277)
==11324==    by 0x182C8F0: new<alloc::collections::btree::node::LeafNode<usize, wasmer_engine::trap::frame_info::ModuleInfoFrameInfo>> (boxed.rs:177)
==11324==    by 0x182C8F0: alloc::collections::btree::node::Root<K,V>::new_leaf (node.rs:157)
==11324==    by 0x18131F9: core::ops::function::FnOnce::call_once (function.rs:233)
==11324==    by 0x181F93C: core::option::Option<T>::get_or_insert_with (option.rs:853)
==11324==    by 0x18451FE: alloc::collections::btree::map::BTreeMap<K,V>::ensure_root_is_owned (map.rs:2324)
==11324==    by 0x18455D1: alloc::collections::btree::map::BTreeMap<K,V>::entry (map.rs:1061)
==11324==    by 0x1846449: alloc::collections::btree::map::BTreeMap<K,V>::insert (map.rs:829)
==11324==    by 0x180E31F: wasmer_engine::trap::frame_info::register (frame_info.rs:281)
==11324==    by 0xBD74E4: <wasmer_engine_jit::artifact::JITArtifact as wasmer_engine::artifact::Artifact>::register_frame_info (artifact.rs:275)
==11324== 
==11324== 1,152 bytes in 4 blocks are possibly lost in loss record 20 of 23
==11324==    at 0x4C33B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0x4013666: allocate_dtv (dl-tls.c:286)
==11324==    by 0x4013666: _dl_allocate_tls (dl-tls.c:530)
==11324==    by 0x5252227: allocate_stack (allocatestack.c:627)
==11324==    by 0x5252227: pthread_create@@GLIBC_2.2.5 (pthread_create.c:644)
==11324==    by 0x1C2C0DC: std::sys::unix::thread::Thread::new (thread.rs:66)
==11324==    by 0xD6508B: std::thread::Builder::spawn_unchecked (mod.rs:492)
==11324==    by 0xD6730B: std::thread::Builder::spawn (mod.rs:386)
==11324==    by 0xD35DF8: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (registry.rs:100)
==11324==    by 0xD36F3F: rayon_core::registry::Registry::new (registry.rs:256)
==11324==    by 0xD3606D: rayon_core::registry::global_registry::{{closure}} (registry.rs:168)
==11324==    by 0xD36529: rayon_core::registry::set_global_registry::{{closure}} (registry.rs:195)
==11324==    by 0xD59BF3: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11324==    by 0x1C17109: std::sync::once::Once::call_inner (once.rs:416)
==11324== 
==11324== 1,520 bytes in 1 blocks are still reachable in loss record 21 of 23
==11324==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0xD5FB4B: alloc::alloc::alloc (alloc.rs:80)
==11324==    by 0xD60973: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11324==    by 0xD5FAAC: alloc::alloc::exchange_malloc (alloc.rs:277)
==11324==    by 0xD463D1: new<crossbeam_deque::deque::Block<rayon_core::job::JobRef>> (boxed.rs:177)
==11324==    by 0xD463D1: <crossbeam_deque::deque::Injector<T> as core::default::Default>::default (deque.rs:1187)
==11324==    by 0xD44C5D: crossbeam_deque::deque::Injector<T>::new (deque.rs:1213)
==11324==    by 0xD36903: rayon_core::registry::Registry::new (registry.rs:238)
==11324==    by 0xD3606D: rayon_core::registry::global_registry::{{closure}} (registry.rs:168)
==11324==    by 0xD36529: rayon_core::registry::set_global_registry::{{closure}} (registry.rs:195)
==11324==    by 0xD59BF3: std::sync::once::Once::call_once::{{closure}} (once.rs:264)
==11324==    by 0x1C17109: std::sync::once::Once::call_inner (once.rs:416)
==11324==    by 0xD59990: std::sync::once::Once::call_once (once.rs:264)
==11324== 
==11324== 1,536 bytes in 4 blocks are still reachable in loss record 22 of 23
==11324==    at 0x4C33E76: memalign (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0x4C33F91: posix_memalign (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0x1C1C4C9: aligned_malloc (alloc.rs:95)
==11324==    by 0x1C1C4C9: alloc (alloc.rs:22)
==11324==    by 0x1C1C4C9: __rdl_alloc (alloc.rs:304)
==11324==    by 0xD5FB4B: alloc::alloc::alloc (alloc.rs:80)
==11324==    by 0xD60973: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11324==    by 0xD5FAAC: alloc::alloc::exchange_malloc (alloc.rs:277)
==11324==    by 0xD2F605: alloc::sync::Arc<T>::new (sync.rs:324)
==11324==    by 0xD4478D: crossbeam_deque::deque::Worker<T>::new_lifo (deque.rs:250)
==11324==    by 0xD373BE: rayon_core::registry::Registry::new::{{closure}} (registry.rs:225)
==11324==    by 0xD7010C: core::iter::adapters::map_fold::{{closure}} (mod.rs:833)
==11324==    by 0xD3F48D: core::iter::traits::iterator::Iterator::fold (iterator.rs:2022)
==11324==    by 0xD716C3: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (mod.rs:873)
==11324== 
==11324== 4,096 bytes in 4 blocks are still reachable in loss record 23 of 23
==11324==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11324==    by 0xD5FB4B: alloc::alloc::alloc (alloc.rs:80)
==11324==    by 0xD60973: <alloc::alloc::Global as core::alloc::AllocRef>::alloc (alloc.rs:174)
==11324==    by 0xD7905D: alloc::raw_vec::RawVec<T,A>::allocate_in (raw_vec.rs:183)
==11324==    by 0xD7C5C0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (raw_vec.rs:159)
==11324==    by 0xD7873E: alloc::raw_vec::RawVec<T>::with_capacity (raw_vec.rs:90)
==11324==    by 0xD53F5E: alloc::vec::Vec<T>::with_capacity (vec.rs:363)
==11324==    by 0xD431A0: crossbeam_deque::deque::Buffer<T>::alloc (deque.rs:45)
==11324==    by 0xD44679: crossbeam_deque::deque::Worker<T>::new_lifo (deque.rs:248)
==11324==    by 0xD373BE: rayon_core::registry::Registry::new::{{closure}} (registry.rs:225)
==11324==    by 0xD7010C: core::iter::adapters::map_fold::{{closure}} (mod.rs:833)
==11324==    by 0xD3F48D: core::iter::traits::iterator::Iterator::fold (iterator.rs:2022)
==11324== 
==11324== LEAK SUMMARY:
==11324==    definitely lost: 0 bytes in 0 blocks
==11324==    indirectly lost: 0 bytes in 0 blocks
==11324==      possibly lost: 1,152 bytes in 4 blocks
==11324==    still reachable: 12,032 bytes in 67 blocks
==11324==         suppressed: 0 bytes in 0 blocks
==11324== 
==11324== For counts of detected and suppressed errors, rerun with: -v
==11324== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
